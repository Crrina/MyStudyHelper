{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crina\\\\Documents\\\\projects1\\\\webproject\\\\project\\\\app\\\\src\\\\components\\\\NoteBox.js\",\n  _s2 = $RefreshSig$();\nimport { useContext, useEffect } from \"react\";\nimport AuthContext from \"../services/AuthProvider\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\nexport default function NoteBox() {\n  _s2();\n  var _s = $RefreshSig$();\n  let auth = useContext(AuthContext);\n  let accessToken = auth.accessToken;\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    console.log(\"aa\");\n    //user is not authenticated\n    if (accessToken === null) {\n      navigate(\"*\");\n    }\n    //prevents the page loading after the event happened\n    event.preventDefault();\n    try {\n      const response = await axios.post(API_URL + \"/note\", {\n        // Request payload goes here\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}` // Include the token in the header\n        }\n      });\n      console.log(\"Got empty response\");\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 401) {\n        console.log(\"Error message: \", err.response.data);\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 403) {\n        console.log(\"Bad request\");\n      } else {\n        console.log(\"Failed to access source\");\n      }\n    }\n  };\n\n  //upon page load get the auth token as well, in case the user refreshes the page\n  _s(useEffect(_s(() => {\n    _s();\n    auth = useContext(AuthContext);\n    accessToken = auth.accessToken;\n  }, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\"), []), \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"titleNote\",\n        children: \"Write your note here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"note-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"note\",\n          name: \"note\",\n          rows: \"10\",\n          cols: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"lll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n\n  //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\n  /* await fetch('http://localhost:8080/user/login/register',{\r\n       method: 'POST',\r\n       headers: {\"Content-Type\": \"application/json\"},\r\n       body: JSON.stringify(input)\r\n   }).then(response => {\r\n       //server response\r\n       if (response.ok) {\r\n           console.log(\"User posted\")\r\n           return response.text();\r\n       }\r\n       throw new Error('HTTP error! status: ${response.status}');\r\n   });\r\n  }*/\n}\n_s2(NoteBox, \"FKOV/vHyq5jter6TaNjPSdsy3v0=\", false, function () {\n  return [useNavigate];\n});\n_c = NoteBox;\nvar _c;\n$RefreshReg$(_c, \"NoteBox\");","map":{"version":3,"names":["useContext","useEffect","AuthContext","axios","useNavigate","jsxDEV","_jsxDEV","API_URL","NoteBox","_s2","_s","$RefreshSig$","auth","accessToken","navigate","handleSubmit","event","console","log","preventDefault","response","post","headers","err","status","data","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","name","rows","cols","type","_c","$RefreshReg$"],"sources":["C:/Users/crina/Documents/projects1/webproject/project/app/src/components/NoteBox.js"],"sourcesContent":["import {useContext, useEffect} from \"react\";\r\nimport AuthContext from \"../services/AuthProvider\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nconst API_URL = \"http://localhost:8080\"\r\n\r\n\r\nexport default function NoteBox(){\r\n\r\n    let auth = useContext(AuthContext);\r\n    let accessToken = auth.accessToken;\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        console.log(\"aa\")\r\n        //user is not authenticated\r\n        if(accessToken === null){\r\n            navigate(\"*\");\r\n        }\r\n        //prevents the page loading after the event happened\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.post(API_URL + \"/note\", {\r\n                // Request payload goes here\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${accessToken}` // Include the token in the header\r\n                }\r\n            });\r\n\r\n            console.log(\"Got empty response\");\r\n        }catch (err){\r\n            if(!err?.response){\r\n                console.log(\"No Server Response\");\r\n            }else if(err?.response.status === 401){\r\n                console.log(\"Error message: \", err.response.data);\r\n            }else if(err?.response.status === 403){\r\n                console.log(\"Bad request\");\r\n            }else{\r\n                console.log(\"Failed to access source\")\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    //upon page load get the auth token as well, in case the user refreshes the page\r\n    useEffect(() => {\r\n        auth = useContext(AuthContext);\r\n       accessToken = auth.accessToken;\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div>\r\n                <h1 id=\"titleNote\">Write your note here</h1>\r\n                <form onSubmit={handleSubmit} className=\"note-form\">\r\n                    <label htmlFor=\"note\"></label>\r\n                    <textarea id=\"note\" name=\"note\" rows=\"10\" cols=\"50\" />\r\n                    <button type=\"submit\">Save</button>\r\n                </form>\r\n            </div>\r\n            <div>\r\n                <p>lll</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n        //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\r\n        /* await fetch('http://localhost:8080/user/login/register',{\r\n             method: 'POST',\r\n             headers: {\"Content-Type\": \"application/json\"},\r\n             body: JSON.stringify(input)\r\n         }).then(response => {\r\n             //server response\r\n             if (response.ok) {\r\n                 console.log(\"User posted\")\r\n                 return response.text();\r\n             }\r\n             throw new Error('HTTP error! status: ${response.status}');\r\n         });\r\n\r\n     }*/\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}