{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crina\\\\Documents\\\\projects1\\\\front_n\\\\app\\\\src\\\\components\\\\NoteBox.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { handleSessionExpired } from \"../utility/SessionExpiryHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NoteBox({\n  apiUrl\n}) {\n  _s();\n  const ITEMS_PER_PAGE = \"4\"; //4 notes are fetched per page\n  let accessToken = localStorage.getItem('accessToken');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [sidebarData, setSidebarData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [noteContent, setNoteContent] = useState(localStorage.getItem(\"noteContent\") || '');\n  const [editMode, setEditMode] = useState(JSON.parse(localStorage.getItem(\"editMode\") || \"false\"));\n  const toggleButtonContent = isSidebarOpen ? 'X' : 'Get saved notes';\n  const [currentNoteId, setCurrentNoteId] = useState(JSON.parse(localStorage.getItem(\"currentNoteId\")) || null);\n  //for pagiation\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const displayButton = editMode ? 'Save Changes' : 'Save';\n  const navigate = useNavigate();\n  useEffect(() => {\n    localStorage.setItem(\"noteContent\", noteContent);\n  }, [noteContent]);\n  useEffect(() => {\n    // Save editMode to localStorage as a string\n    localStorage.setItem(\"editMode\", JSON.stringify(editMode));\n  }, [editMode]);\n  useEffect(() => {\n    localStorage.setItem(\"currentNoteId\", JSON.stringify(currentNoteId));\n  }, [currentNoteId]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(apiUrl + \"/note\", {\n        content: noteContent\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      setNoteContent(\"\");\n      if (response.status === 200 && isSidebarOpen) {\n        await fetchData(currentPage);\n      }\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 401) {\n        console.log(\"Error message: \", err.response.data);\n        handleSessionExpired(navigate); // Handle session expiry\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 403) {\n        console.log(\"Bad request\");\n      } else {\n        console.log(\"Failed to access source\");\n      }\n    }\n  };\n  const editSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.put(apiUrl + \"/note/api/\" + currentNoteId, noteContent, {\n        headers: {\n          'Content-Type': 'text/plain',\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      setNoteContent(\"\");\n      setEditMode(false);\n      if (response.status === 200) {\n        await fetchData(currentPage);\n      }\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 401) {\n        console.log(\"Error message: \", err.response.data);\n        handleSessionExpired(navigate); // Handle session expiry\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 403) {\n        console.log(\"Bad request\");\n      } else {\n        console.log(\"Failed to access source\");\n      }\n    }\n  };\n  const fetchData = async (pageNumber = 1) => {\n    const pageNum = pageNumber - 1;\n    setIsLoading(true);\n    try {\n      var _response$data, _response$data2, _response$data3;\n      const response = await axios.get(apiUrl + \"/note\", {\n        params: {\n          page: pageNum,\n          size: ITEMS_PER_PAGE\n        },\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      setSidebarData((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.notes);\n      setTotalPages((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.totalPages);\n      setCurrentPage(((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.currentPage) + 1);\n      setIsLoading(false);\n    } catch (error) {\n      if ((error === null || error === void 0 ? void 0 : error.response.status) === 401) {\n        console.log(\"Error message: \", error.response.data);\n        handleSessionExpired(navigate); // Handle session expiry\n      } else {\n        console.error('Error fetching data:', error);\n        setIsLoading(false);\n      }\n    }\n  };\n\n  //upon page load get the auth token\n  useEffect(() => {\n    accessToken = localStorage.getItem('accessToken');\n  }, []);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n    if (!isSidebarOpen) {\n      setCurrentPage(1);\n      fetchData().then(() => {\n        console.log(\"Data fetched successfully after toggling sidebar.\");\n      }).catch(error => {\n        console.error(\"Error fetching data:\", error);\n      });\n    }\n  };\n  const handlePageClick = pageNumber => {\n    setCurrentPage(pageNumber);\n    fetchData(pageNumber).then(() => {\n      console.log(\"Data fetched successfully for page:\", pageNumber);\n    }).catch(error => {\n      console.error(\"Error fetching data for page:\", pageNumber, error);\n    });\n  };\n  const deleteRequest = async (noteId, event) => {\n    let answer = window.confirm(\"Are you sure you want to delete the note?\");\n    if (answer) {\n      event.preventDefault();\n      try {\n        const response = await axios.delete(apiUrl + \"/note/\" + noteId, {\n          headers: {\n            'Authorization': `Bearer ${accessToken}`\n          }\n        });\n        if (response.status === 200) {\n          await fetchData(currentPage);\n        }\n      } catch (err) {\n        if (!(err !== null && err !== void 0 && err.response)) {\n          console.log(\"No Server Response\");\n        } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 404) {\n          console.log(\"Error message: \", err.response.data);\n          handleSessionExpired(navigate); // Handle session expiry\n        } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 403) {\n          console.log(\"Bad request\");\n        } else {\n          console.log(\"Failed to access source\");\n        }\n      }\n    }\n  };\n\n  // Pagination Component\n  const Pagination = ({\n    totalPages,\n    currentPage\n  }) => {\n    const maxPageNumbersToShow = 3;\n    const pages = [];\n    // calculate the range of page numbers to show\n    let startPage = Math.max(1, currentPage - Math.floor(maxPageNumbersToShow / 2));\n    let endPage = Math.min(totalPages, startPage + maxPageNumbersToShow - 1);\n\n    // adjust the start page  at the end of the range\n    if (endPage === totalPages) {\n      startPage = Math.max(1, endPage - maxPageNumbersToShow + 1);\n    }\n\n    // previous page link\n    pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonPag\",\n      onClick: () => handlePageClick(currentPage - 1),\n      disabled: currentPage === 1,\n      children: \"Previous\"\n    }, \"prev\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this));\n\n    // first page link\n    if (startPage > 1) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: e => {\n          e.preventDefault();\n          handlePageClick(1);\n        },\n        children: \"1\"\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this));\n      if (startPage > 2) pages.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"...\"\n      }, \"startEllipsis\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 43\n      }, this));\n    }\n\n    // page number links\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: `pagination-link ${i === currentPage ? 'active' : ''}`,\n        onClick: e => {\n          e.preventDefault();\n          handlePageClick(i);\n        },\n        \"aria-current\": i === currentPage ? 'page' : undefined,\n        \"aria-disabled\": i === currentPage ? 'true' : 'false',\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this));\n    }\n\n    // last page link\n    if (endPage < totalPages) {\n      if (endPage < totalPages - 1) pages.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"...\"\n      }, \"endEllipsis\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 54\n      }, this));\n      pages.push( /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: e => {\n          e.preventDefault();\n          handlePageClick(totalPages);\n        },\n        children: totalPages\n      }, totalPages, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this));\n    }\n\n    // next page link\n    pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonPag\",\n      onClick: () => handlePageClick(currentPage + 1),\n      disabled: currentPage === totalPages,\n      children: \"Next\"\n    }, \"next\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-container\",\n      children: pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"titleNote\",\n        children: editMode ? 'Your Note' : 'Write your note here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: editMode ? editSubmit : handleSubmit,\n        className: \"note-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"noteContent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"noteContent\",\n          name: \"noteContent\",\n          rows: \"10\",\n          cols: \"50\",\n          className: \"input-box-note\",\n          value: noteContent,\n          onChange: e => setNoteContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-save\",\n            type: \"submit\",\n            children: displayButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"discard-save\",\n            onClick: () => {\n              setEditMode(false);\n              setNoteContent('');\n            },\n            children: \"Done Viewing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allSideBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `sideBar-button ${toggleButtonContent}`,\n        onClick: toggleSidebar,\n        children: toggleButtonContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), isSidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Pagination, {\n            totalPages: totalPages,\n            currentPage: currentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notes-container\",\n            children: sidebarData && sidebarData.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"note-date\",\n                children: note.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"note-content\",\n                children: note.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"edit\",\n                onClick: () => {\n                  setNoteContent(note.content);\n                  setCurrentNoteId(note.id);\n                  setEditMode(true);\n                },\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"delete\",\n                onClick: e => deleteRequest(note.id, e),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 9\n  }, this);\n}\n_s(NoteBox, \"DKYjUh6xVnPt3WN2Pb31/pukJYM=\", false, function () {\n  return [useNavigate];\n});\n_c = NoteBox;\nvar _c;\n$RefreshReg$(_c, \"NoteBox\");","map":{"version":3,"names":["useEffect","useState","axios","useNavigate","handleSessionExpired","jsxDEV","_jsxDEV","Fragment","_Fragment","NoteBox","apiUrl","_s","ITEMS_PER_PAGE","accessToken","localStorage","getItem","isSidebarOpen","setIsSidebarOpen","sidebarData","setSidebarData","isLoading","setIsLoading","noteContent","setNoteContent","editMode","setEditMode","JSON","parse","toggleButtonContent","currentNoteId","setCurrentNoteId","currentPage","setCurrentPage","totalPages","setTotalPages","displayButton","navigate","setItem","stringify","handleSubmit","event","preventDefault","response","post","content","headers","status","fetchData","err","console","log","data","editSubmit","put","pageNumber","pageNum","_response$data","_response$data2","_response$data3","get","params","page","size","notes","error","toggleSidebar","then","catch","handlePageClick","deleteRequest","noteId","answer","window","confirm","delete","Pagination","maxPageNumbersToShow","pages","startPage","Math","max","floor","endPage","min","push","className","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","href","e","i","undefined","id","onSubmit","htmlFor","name","rows","cols","value","onChange","target","type","map","note","index","date","_c","$RefreshReg$"],"sources":["C:/Users/crina/Documents/projects1/front_n/app/src/components/NoteBox.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {handleSessionExpired} from \"../utility/SessionExpiryHandler\";\r\n\r\nexport default function NoteBox({apiUrl}) {\r\n\r\n\r\n    const ITEMS_PER_PAGE = \"4\"; //4 notes are fetched per page\r\n    let accessToken = localStorage.getItem('accessToken');\r\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n    const [sidebarData, setSidebarData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [noteContent, setNoteContent] = useState(localStorage.getItem(\"noteContent\") || '');\r\n    const [editMode, setEditMode] = useState(JSON.parse(localStorage.getItem(\"editMode\") || \"false\"));\r\n    const toggleButtonContent = isSidebarOpen ? 'X' : 'Get saved notes';\r\n    const [currentNoteId, setCurrentNoteId] = useState(\r\n        JSON.parse(localStorage.getItem(\"currentNoteId\")) || null\r\n    );\r\n    //for pagiation\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const displayButton = editMode ? 'Save Changes' : 'Save';\r\n    const navigate = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"noteContent\", noteContent);\r\n    }, [noteContent]);\r\n\r\n\r\n    useEffect(() => {\r\n        // Save editMode to localStorage as a string\r\n        localStorage.setItem(\"editMode\", JSON.stringify(editMode));\r\n    }, [editMode]);\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"currentNoteId\", JSON.stringify(currentNoteId));\r\n    }, [currentNoteId]);\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.post(apiUrl + \"/note\", {\r\n                content: noteContent\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${accessToken}`\r\n                }\r\n            });\r\n            setNoteContent(\"\");\r\n            if (response.status === 200 && isSidebarOpen) {\r\n                await fetchData(currentPage);\r\n            }\r\n\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                console.log(\"No Server Response\");\r\n            } else if (err?.response.status === 401) {\r\n                console.log(\"Error message: \", err.response.data);\r\n                handleSessionExpired(navigate); // Handle session expiry\r\n            } else if (err?.response.status === 403) {\r\n                console.log(\"Bad request\");\r\n            } else {\r\n                console.log(\"Failed to access source\")\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const editSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.put(apiUrl + \"/note/api/\" + currentNoteId, noteContent, {\r\n                headers: {\r\n                    'Content-Type': 'text/plain',\r\n                    'Authorization': `Bearer ${accessToken}`\r\n                }\r\n            });\r\n            setNoteContent(\"\");\r\n            setEditMode(false);\r\n            if (response.status === 200) {\r\n                await fetchData(currentPage);\r\n            }\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                console.log(\"No Server Response\");\r\n            } else if (err?.response.status === 401) {\r\n                console.log(\"Error message: \", err.response.data);\r\n                handleSessionExpired(navigate); // Handle session expiry\r\n            } else if (err?.response.status === 403) {\r\n                console.log(\"Bad request\");\r\n            } else {\r\n                console.log(\"Failed to access source\")\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const fetchData = async (pageNumber = 1) => {\r\n        const pageNum = pageNumber - 1;\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await axios.get(apiUrl + \"/note\", {\r\n                params: {\r\n                    page: pageNum,\r\n                    size: ITEMS_PER_PAGE\r\n                },\r\n                headers: {\r\n                    'Authorization': `Bearer ${accessToken}`\r\n                }\r\n            });\r\n            setSidebarData(response.data?.notes);\r\n            setTotalPages(response.data?.totalPages);\r\n            setCurrentPage(response.data?.currentPage + 1);\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            if (error?.response.status === 401) {\r\n                console.log(\"Error message: \", error.response.data);\r\n                handleSessionExpired(navigate); // Handle session expiry\r\n            } else {\r\n                console.error('Error fetching data:', error);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    //upon page load get the auth token\r\n    useEffect(() => {\r\n        accessToken = localStorage.getItem('accessToken');\r\n\r\n    }, []);\r\n\r\n    const toggleSidebar = () => {\r\n        setIsSidebarOpen(!isSidebarOpen);\r\n        if (!isSidebarOpen) {\r\n            setCurrentPage(1);\r\n            fetchData().then(() => {\r\n                console.log(\"Data fetched successfully after toggling sidebar.\");\r\n            }).catch(error => {\r\n                console.error(\"Error fetching data:\", error);\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    const handlePageClick = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n        fetchData(pageNumber).then(() => {\r\n            console.log(\"Data fetched successfully for page:\", pageNumber);\r\n        }).catch(error => {\r\n            console.error(\"Error fetching data for page:\", pageNumber, error);\r\n        });\r\n    };\r\n\r\n\r\n    const deleteRequest = async (noteId, event) => {\r\n        let answer = window.confirm(\"Are you sure you want to delete the note?\")\r\n        if (answer) {\r\n            event.preventDefault();\r\n            try {\r\n                const response = await axios.delete(apiUrl + \"/note/\" + noteId, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${accessToken}`\r\n                    },\r\n                });\r\n                if (response.status === 200) {\r\n                    await fetchData(currentPage);\r\n                }\r\n            } catch (err) {\r\n                if (!err?.response) {\r\n                    console.log(\"No Server Response\");\r\n                } else if (err?.response.status === 404) {\r\n                    console.log(\"Error message: \", err.response.data);\r\n                    handleSessionExpired(navigate); // Handle session expiry\r\n                } else if (err?.response.status === 403) {\r\n                    console.log(\"Bad request\");\r\n                } else {\r\n                    console.log(\"Failed to access source\")\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n\r\n    // Pagination Component\r\n    const Pagination = ({totalPages, currentPage}) => {\r\n        const maxPageNumbersToShow = 3;\r\n        const pages = [];\r\n        // calculate the range of page numbers to show\r\n        let startPage = Math.max(1, currentPage - Math.floor(maxPageNumbersToShow / 2));\r\n        let endPage = Math.min(totalPages, startPage + maxPageNumbersToShow - 1);\r\n\r\n        // adjust the start page  at the end of the range\r\n        if (endPage === totalPages) {\r\n            startPage = Math.max(1, endPage - maxPageNumbersToShow + 1);\r\n        }\r\n\r\n        // previous page link\r\n        pages.push(\r\n            <button key=\"prev\" className=\"buttonPag\" onClick={() =>\r\n                handlePageClick(currentPage - 1)} disabled={currentPage === 1}>\r\n                Previous\r\n            </button>\r\n        );\r\n\r\n        // first page link\r\n        if (startPage > 1) {\r\n            pages.push(\r\n                <a href=\"#\" key={1} onClick={(e) => {\r\n                    e.preventDefault();\r\n                    handlePageClick(1);\r\n                }}>\r\n                    1\r\n                </a>\r\n            );\r\n            if (startPage > 2) pages.push(<span key=\"startEllipsis\">...</span>);\r\n        }\r\n\r\n        // page number links\r\n        for (let i = startPage; i <= endPage; i++) {\r\n            pages.push(\r\n                <a\r\n                    href=\"#\"\r\n                    key={i}\r\n                    className={`pagination-link ${i === currentPage ? 'active' : ''}`}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        handlePageClick(i);\r\n                    }}\r\n                    aria-current={i === currentPage ? 'page' : undefined}\r\n                    aria-disabled={i === currentPage ? 'true' : 'false'}\r\n                >\r\n                    {i}\r\n                </a>\r\n            );\r\n        }\r\n\r\n        // last page link\r\n        if (endPage < totalPages) {\r\n            if (endPage < totalPages - 1) pages.push(<span key=\"endEllipsis\">...</span>);\r\n            pages.push(\r\n                <a href=\"#\" key={totalPages} onClick={(e) => {\r\n                    e.preventDefault();\r\n                    handlePageClick(totalPages);\r\n                }}>\r\n                    {totalPages}\r\n                </a>\r\n            );\r\n        }\r\n\r\n        // next page link\r\n        pages.push(\r\n            <button key=\"next\" className=\"buttonPag\" onClick={() => handlePageClick(currentPage + 1)}\r\n                    disabled={currentPage === totalPages}>\r\n                Next\r\n            </button>\r\n        );\r\n\r\n        return <div className=\"pagination-container\">{pages}</div>;\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container-note\">\r\n            <div className='note-input-container'>\r\n                <h1 id=\"titleNote\">{editMode ? 'Your Note' : 'Write your note here'}</h1>\r\n                <form onSubmit={editMode ? editSubmit : handleSubmit} className=\"note-form\">\r\n                    <label htmlFor=\"noteContent\"></label>\r\n                    <textarea id=\"noteContent\" name=\"noteContent\" rows=\"10\" cols=\"50\"\r\n                              className=\"input-box-note\" value={noteContent}\r\n                              onChange={(e) => setNoteContent(e.target.value)}/>\r\n                    <div className=\"note-buttons\">\r\n                        <button className=\"note-save\" type=\"submit\">{displayButton}</button>\r\n                        {editMode && (\r\n                            <button className=\"discard-save\" onClick={() => {\r\n                                setEditMode(false);\r\n                                setNoteContent('')\r\n                            }}>Done Viewing</button>\r\n                        )}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"allSideBar\">\r\n                <button className={`sideBar-button ${toggleButtonContent}`}\r\n                        onClick={toggleSidebar}>{toggleButtonContent}</button>\r\n                {isSidebarOpen && (\r\n                    <div className=\"sidebar\">\r\n                        {isLoading ? (\r\n                            <p>Loading...</p>\r\n                        ) : (\r\n                            <>\r\n\r\n                                <Pagination totalPages={totalPages} currentPage={currentPage}/>\r\n\r\n                                <div className=\"notes-container\">\r\n                                    {sidebarData && sidebarData.map((note, index) => (\r\n                                        <div className=\"note-item\" key={index}>\r\n                                            <div className=\"note-date\">{note.date}</div>\r\n                                            <div className=\"note-content\">{note.content}</div>\r\n                                            <a href=\"#\" className=\"edit\" onClick={() => {\r\n                                                setNoteContent(note.content);\r\n                                                setCurrentNoteId(note.id);\r\n                                                setEditMode(true);\r\n                                            }}>View</a>\r\n                                            <a href=\"#\" className=\"delete\" onClick={(e) =>\r\n                                                deleteRequest(note.id, e)}>Delete</a>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}