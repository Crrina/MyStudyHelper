{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crina\\\\Documents\\\\projects1\\\\webproject\\\\project\\\\app\\\\src\\\\components\\\\NoteBox.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../services/AuthProvider\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\nexport default function NoteBox() {\n  _s();\n  const navigate = useNavigate();\n  let accessToken = localStorage.getItem('accessToken');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [sidebarData, setSidebarData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async event => {\n    console.log(\"aa\");\n    //user is not authenticated\n    if (accessToken === null) {\n      navigate(\"*\");\n    }\n    //prevents the page loading after the event happened\n    event.preventDefault();\n    try {\n      const response = await axios.post(API_URL + \"/note\", {\n        // Request payload goes here\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}` // Include the token in the header\n        }\n      });\n      console.log(\"Got empty response\");\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 401) {\n        console.log(\"Error message: \", err.response.data);\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 403) {\n        console.log(\"Bad request\");\n      } else {\n        console.log(\"Failed to access source\");\n      }\n    }\n  };\n  const fetchData = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get('YOUR_API_ENDPOINT');\n      setSidebarData(response.data);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setIsLoading(false);\n    }\n  };\n\n  //upon page load get the auth token as well, in case the user refreshes the page\n  useEffect(() => {\n    accessToken = localStorage.getItem('accessToken');\n  }, []);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n    if (!isSidebarOpen) {\n      fetchData();\n    }\n  };\n  const items = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"titleNote\",\n        children: \"Write your note here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"note-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"note\",\n          name: \"note\",\n          rows: \"10\",\n          cols: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSidebar,\n        children: \"Get saved notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), isSidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        style: {\n          position: 'fixed',\n          right: 0,\n          top: 0,\n          width: '250px',\n          height: '100%',\n          backgroundColor: 'lightgrey'\n        },\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sideItem\",\n          children: [sidebarData && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: JSON.stringify(sidebarData)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 49\n          }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 52\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n\n  //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\n  /* await fetch('http://localhost:8080/user/login/register',{\r\n       method: 'POST',\r\n       headers: {\"Content-Type\": \"application/json\"},\r\n       body: JSON.stringify(input)\r\n   }).then(response => {\r\n       //server response\r\n       if (response.ok) {\r\n           console.log(\"User posted\")\r\n           return response.text();\r\n       }\r\n       throw new Error('HTTP error! status: ${response.status}');\r\n   });\r\n  }*/\n}\n_s(NoteBox, \"zvlKDxsoTlwZVNbWkZpu83gw3RM=\", false, function () {\n  return [useNavigate];\n});\n_c = NoteBox;\nvar _c;\n$RefreshReg$(_c, \"NoteBox\");","map":{"version":3,"names":["useContext","useEffect","useState","AuthContext","axios","useNavigate","jsxDEV","_jsxDEV","API_URL","NoteBox","_s","navigate","accessToken","localStorage","getItem","isSidebarOpen","setIsSidebarOpen","sidebarData","setSidebarData","isLoading","setIsLoading","handleSubmit","event","console","log","preventDefault","response","post","headers","err","status","data","fetchData","get","error","toggleSidebar","items","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","name","rows","cols","type","onClick","style","position","right","top","width","height","backgroundColor","JSON","stringify","map","item","_c","$RefreshReg$"],"sources":["C:/Users/crina/Documents/projects1/webproject/project/app/src/components/NoteBox.js"],"sourcesContent":["import {useContext, useEffect, useState} from \"react\";\r\nimport AuthContext from \"../services/AuthProvider\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nconst API_URL = \"http://localhost:8080\"\r\n\r\n\r\nexport default function NoteBox(){\r\n\r\n    const navigate = useNavigate();\r\n    let accessToken = localStorage.getItem('accessToken');\r\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n    const [sidebarData, setSidebarData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleSubmit = async (event) => {\r\n        console.log(\"aa\")\r\n        //user is not authenticated\r\n        if(accessToken === null){\r\n            navigate(\"*\");\r\n        }\r\n        //prevents the page loading after the event happened\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.post(API_URL + \"/note\", {\r\n                // Request payload goes here\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${accessToken}` // Include the token in the header\r\n                }\r\n            });\r\n\r\n            console.log(\"Got empty response\");\r\n        }catch (err){\r\n            if(!err?.response){\r\n                console.log(\"No Server Response\");\r\n            }else if(err?.response.status === 401){\r\n                console.log(\"Error message: \", err.response.data);\r\n            }else if(err?.response.status === 403){\r\n                console.log(\"Bad request\");\r\n            }else{\r\n                console.log(\"Failed to access source\")\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const fetchData = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await axios.get('YOUR_API_ENDPOINT');\r\n            setSidebarData(response.data);\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    //upon page load get the auth token as well, in case the user refreshes the page\r\n    useEffect(() => {\r\n        accessToken = localStorage.getItem('accessToken');\r\n\r\n    }, []);\r\n\r\n    const toggleSidebar = () => {\r\n        setIsSidebarOpen(!isSidebarOpen);\r\n        if (!isSidebarOpen) {\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    const items = [\"1\", \"2\",\"3\", \"4\", \"5\", \"6\"]\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div>\r\n                <h1 id=\"titleNote\">Write your note here</h1>\r\n                <form onSubmit={handleSubmit} className=\"note-form\">\r\n                    <label htmlFor=\"note\"></label>\r\n                    <textarea id=\"note\" name=\"note\" rows=\"10\" cols=\"50\" />\r\n                    <button type=\"submit\">Save</button>\r\n                </form>\r\n            </div>\r\n            <div>\r\n                <button onClick={toggleSidebar}>Get saved notes</button>\r\n                {isSidebarOpen && (\r\n                    <div className=\"sidebar\" style={{\r\n                        position: 'fixed',\r\n                        right: 0,\r\n                        top: 0,\r\n                        width: '250px',\r\n                        height: '100%',\r\n                        backgroundColor: 'lightgrey'\r\n                    }}>\r\n                        {isLoading ? (\r\n                            <p>Loading...</p>\r\n                        ) : (\r\n                            <div className=\"sideItem\">\r\n                                {/* Display sidebar content here */}\r\n                                {sidebarData && <p>{JSON.stringify(sidebarData)}</p>}\r\n                                {items.map(item => <div key={item}>{item}</div>)}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n        //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\r\n        /* await fetch('http://localhost:8080/user/login/register',{\r\n             method: 'POST',\r\n             headers: {\"Content-Type\": \"application/json\"},\r\n             body: JSON.stringify(input)\r\n         }).then(response => {\r\n             //server response\r\n             if (response.ok) {\r\n                 console.log(\"User posted\")\r\n                 return response.text();\r\n             }\r\n             throw new Error('HTTP error! status: ${response.status}');\r\n         });\r\n\r\n     }*/\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}