{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crina\\\\Documents\\\\projects1\\\\webproject\\\\project\\\\app\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport TypingAnimation from \"./TypingAnimation\";\nimport axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\nexport default function ChatBox() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  //const [chatLog, setChatLog] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  let accessToken = localStorage.getItem('accessToken');\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [chatLog, setChatLog] = useState(() => {\n    const savedChatLog = localStorage.getItem('chatLog');\n    return savedChatLog ? JSON.parse(savedChatLog) : [];\n  });\n  useEffect(() => {\n    // Save chatLog to localStorage whenever it changes\n    localStorage.setItem('chatLog', JSON.stringify(chatLog));\n  }, [chatLog]);\n  const handleSend = async event => {\n    event.preventDefault();\n    setChatLog(prevChatLog => [...prevChatLog, {\n      type: 'user',\n      message: input,\n      saved: false\n    }]);\n    const rest_api = \"http://localhost:8080/bot/chat?prompt=\" + input;\n    setIsLoading(true);\n    try {\n      //my model is handled at the backend, as well as the key for security reasons\n      const response = await fetch(rest_api, {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/text\"\n        }\n      });\n      const responseText = await response.text();\n      setChatLog(prevChatLog => [...prevChatLog, {\n        type: \"bot\",\n        message: responseText\n      }]);\n      setIsLoading(false);\n      setInput('');\n\n      // setAnswer(textResponse);\n    } catch (error) {\n      setIsLoading(false);\n      console.error(\"Fetching error: \", error);\n    }\n  };\n\n  //<!--the button has to be in the form, for onSubmit to be triggered by the button\n  const handleSaveMessage = async (message, index, event) => {\n    event.preventDefault();\n    if (!accessToken) {\n      navigate('/login', {\n        state: {\n          from: location\n        }\n      });\n    } else {\n      try {\n        const response = await axios.post(API_URL + \"/note\", {\n          content: message\n        }, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${accessToken}` // Include the token in the header\n          }\n        });\n        if (response.status === 200) {\n          setChatLog(prevChatLog => {\n            const newChatLog = [...prevChatLog];\n            newChatLog[index] = {\n              ...newChatLog[index],\n              saved: true\n            };\n            return newChatLog;\n          });\n        }\n      } catch (err) {\n        if (!(err !== null && err !== void 0 && err.response)) {\n          console.log(\"No Server Response\");\n        } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 401) {\n          console.log(\"Error message: \", err.response.data);\n          localStorage.removeItem('token');\n          alert(\"Your session has expired please log in again\");\n          navigate(\"/login\");\n        } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 403) {\n          console.log(\"Bad request\");\n        } else {\n          console.log(\"Failed to access source\");\n        }\n      }\n    }\n  };\n\n  //or the button can be outside the form, but then instead of having onSubmit={} we would have at the button onClick={handleSend}-->\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: \"ChatGPT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble\",\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), message.type === 'bot' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `save-chat-convo ${message.saved ? 'saved' : ''}`,\n          onClick: event => handleSaveMessage(message.message, index, event),\n          disabled: message.saved // Disable the button if the message is saved\n          ,\n          children: message.saved ? 'Saved' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-log\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animation-log\",\n          children: /*#__PURE__*/_jsxDEV(TypingAnimation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, chatLog.length, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSend,\n      className: \"chat-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chat-input\",\n        placeholder: \"Type your message...\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatBox, \"KKTkq5+7tJfohEIffg2R0OyuXCs=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["useEffect","useState","TypingAnimation","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","API_URL","ChatBox","_s","input","setInput","answer","setAnswer","isLoading","setIsLoading","accessToken","localStorage","getItem","location","navigate","chatLog","setChatLog","savedChatLog","JSON","parse","setItem","stringify","handleSend","event","preventDefault","prevChatLog","type","message","saved","rest_api","response","fetch","method","headers","responseText","text","error","console","handleSaveMessage","index","state","from","post","content","status","newChatLog","err","log","data","removeItem","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","disabled","length","onSubmit","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/crina/Documents/projects1/webproject/project/app/src/components/ChatBox.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport TypingAnimation from \"./TypingAnimation\";\r\nimport axios from \"axios\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nconst API_URL = \"http://localhost:8080\"\r\n\r\n\r\n\r\n\r\nexport default function ChatBox(){\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const [answer, setAnswer] = useState(\"\");\r\n    //const [chatLog, setChatLog] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let accessToken = localStorage.getItem('accessToken');\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const [chatLog, setChatLog] = useState(() => {\r\n        const savedChatLog = localStorage.getItem('chatLog');\r\n        return savedChatLog ? JSON.parse(savedChatLog) : [];\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Save chatLog to localStorage whenever it changes\r\n        localStorage.setItem('chatLog', JSON.stringify(chatLog));\r\n    }, [chatLog]);\r\n\r\n\r\n\r\n    const handleSend = async (event) => {\r\n        event.preventDefault();\r\n\r\n            setChatLog((prevChatLog) => [...prevChatLog, {type: 'user', message: input, saved: false}]);\r\n            const rest_api = \"http://localhost:8080/bot/chat?prompt=\" + input;\r\n            setIsLoading(true);\r\n            try {   //my model is handled at the backend, as well as the key for security reasons\r\n                const response = await fetch(rest_api, {\r\n                    method: 'GET',\r\n                    headers: {\"Content-Type\": \"application/text\"},\r\n                });\r\n                const responseText = await response.text()\r\n                setChatLog((prevChatLog) => [...prevChatLog, {type: \"bot\", message: responseText}])\r\n                setIsLoading(false);\r\n                setInput('');\r\n\r\n                // setAnswer(textResponse);\r\n            } catch (error) {\r\n                setIsLoading(false)\r\n                console.error(\"Fetching error: \", error);\r\n            }\r\n\r\n    };\r\n\r\n\r\n\r\n    //<!--the button has to be in the form, for onSubmit to be triggered by the button\r\n    const handleSaveMessage = async (message,index, event)=> {\r\n        event.preventDefault();\r\n        if(!accessToken) {\r\n            navigate('/login', {state: {from: location}});\r\n        }else{\r\n        try {\r\n            const response = await axios.post(API_URL + \"/note\", {\r\n                content: message\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${accessToken}` // Include the token in the header\r\n                }\r\n            });\r\n            if (response.status === 200 ) {\r\n                setChatLog(prevChatLog => {\r\n                    const newChatLog = [...prevChatLog];\r\n                    newChatLog[index] = { ...newChatLog[index], saved: true };\r\n                    return newChatLog;\r\n                });\r\n            }\r\n        }catch (err) {\r\n            if (!err?.response) {\r\n                console.log(\"No Server Response\");\r\n            } else if (err?.response.status === 401) {\r\n                console.log(\"Error message: \", err.response.data);\r\n                localStorage.removeItem('token');\r\n                alert(\"Your session has expired please log in again\");\r\n                navigate(\"/login\")\r\n            } else if (err?.response.status === 403) {\r\n                console.log(\"Bad request\");\r\n            } else {\r\n                console.log(\"Failed to access source\")\r\n            }\r\n        }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //or the button can be outside the form, but then instead of having onSubmit={} we would have at the button onClick={handleSend}-->\r\n    return (\r\n        <div className=\"container-chat\">\r\n            <header className=\"chat-header\">\r\n                ChatGPT\r\n            </header>\r\n            <div className=\"chat-messages\">\r\n                {chatLog.map((message, index) => (\r\n                    <div key={index} className={`message ${message.type}`}>\r\n                        <div className=\"message-bubble\">\r\n                            {message.message}\r\n                        </div>\r\n                        {message.type === 'bot' && (\r\n                            <button\r\n                                className={`save-chat-convo ${message.saved ? 'saved' : ''}`}\r\n                                onClick={(event) => handleSaveMessage(message.message, index, event)}\r\n                                disabled={message.saved} // Disable the button if the message is saved\r\n                            >\r\n                                {message.saved ? 'Saved' : 'Save'}\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n\r\n                {\r\n                    isLoading && <div key={chatLog.length} className=\"typing-log\">\r\n                    <div className=\"animation-log\">\r\n                        <TypingAnimation/>\r\n                    </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <form onSubmit={handleSend} className=\"chat-input-area\">\r\n                <input\r\n                    className=\"chat-input\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                />\r\n                <button type=\"submit\" className=\"send-button\">\r\n                    Send\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}