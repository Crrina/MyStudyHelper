{"ast":null,"code":"//\n// const OpenAI = require('openai');\n// //const configuration = new OpenAI.Configuration({apiKey : \"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\"});\n// const openai = new OpenAI({apiKey: \"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\", dangerouslyAllowBrowser:true});\n//\n//\n// //sends a request to openAi server\n// //receive the response and extract it.\n// export async function sendMessageToOpenAI(message){\n//     try {\n//         const response = await openai.chat.completions.create({\n//             model: \"gpt-3.5-turbo\",\n//             messages : [{role:\"system\", content: message}],\n//             max_tokens: 256,\n//         });\n//         return response.choices[0]; //extracting only the text\n//     }catch (error){\n//         console.log(\"Error in SendMessageToOpenAi: \", error);\n//         return null;\n//     }\n// }","map":{"version":3,"names":[],"sources":["C:/Users/crina/Documents/projects1/webproject/project/app/src/openai.js"],"sourcesContent":["//\r\n// const OpenAI = require('openai');\r\n// //const configuration = new OpenAI.Configuration({apiKey : \"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\"});\r\n// const openai = new OpenAI({apiKey: \"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\", dangerouslyAllowBrowser:true});\r\n//\r\n//\r\n// //sends a request to openAi server\r\n// //receive the response and extract it.\r\n// export async function sendMessageToOpenAI(message){\r\n//     try {\r\n//         const response = await openai.chat.completions.create({\r\n//             model: \"gpt-3.5-turbo\",\r\n//             messages : [{role:\"system\", content: message}],\r\n//             max_tokens: 256,\r\n//         });\r\n//         return response.choices[0]; //extracting only the text\r\n//     }catch (error){\r\n//         console.log(\"Error in SendMessageToOpenAi: \", error);\r\n//         return null;\r\n//     }\r\n// }"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}