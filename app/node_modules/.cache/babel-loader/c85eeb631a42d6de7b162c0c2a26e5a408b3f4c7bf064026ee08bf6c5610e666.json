{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crina\\\\Documents\\\\projects1\\\\webproject\\\\project\\\\app\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport TypingAnimation from \"./TypingAnimation\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\nexport default function ChatBox() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  //const [chatLog, setChatLog] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  let accessToken = localStorage.getItem('accessToken');\n  const [chatLog, setChatLog] = useState(() => {\n    const savedChatLog = localStorage.getItem('chatLog');\n    return savedChatLog ? JSON.parse(savedChatLog) : [];\n  });\n  useEffect(() => {\n    // Save chatLog to localStorage whenever it changes\n    localStorage.setItem('chatLog', JSON.stringify(chatLog));\n  }, [chatLog]);\n  const handleSend = async event => {\n    event.preventDefault();\n    if (!accessToken) {\n      navigate('/login');\n    } else {\n      setChatLog(prevChatLog => [...prevChatLog, {\n        type: 'user',\n        message: input,\n        saved: false\n      }]);\n      const rest_api = \"http://localhost:8080/bot/chat?prompt=\" + input;\n      setIsLoading(true);\n      try {\n        //my model is handled at the backend, as well as the key for security reasons\n        const response = await fetch(rest_api, {\n          method: 'GET',\n          headers: {\n            \"Content-Type\": \"application/text\"\n          }\n        });\n        const responseText = await response.text();\n        setChatLog(prevChatLog => [...prevChatLog, {\n          type: \"bot\",\n          message: responseText\n        }]);\n        setIsLoading(false);\n        setInput('');\n\n        // setAnswer(textResponse);\n      } catch (error) {\n        setIsLoading(false);\n        console.error(\"Fetching error: \", error);\n      }\n    }\n  };\n\n  //<!--the button has to be in the form, for onSubmit to be triggered by the button\n  const handleSaveMessage = async (message, index, event) => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(API_URL + \"/note\", {\n        content: message\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}` // Include the token in the header\n        }\n      });\n      if (response.status === 200) {\n        setChatLog(prevChatLog => {\n          const newChatLog = [...prevChatLog];\n          newChatLog[index] = {\n            ...newChatLog[index],\n            saved: true\n          };\n          return newChatLog;\n        });\n      }\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 401) {\n        console.log(\"Error message: \", err.response.data);\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 403) {\n        console.log(\"Bad request\");\n      } else {\n        console.log(\"Failed to access source\");\n      }\n    }\n  };\n\n  //or the button can be outside the form, but then instead of having onSubmit={} we would have at the button onClick={handleSend}-->\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: \"ChatGPT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble\",\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), message.type === 'bot' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `save-chat-convo ${message.saved ? 'saved' : ''}`,\n          onClick: event => handleSaveMessage(message.message, index, event),\n          disabled: message.saved // Disable the button if the message is saved\n          ,\n          children: message.saved ? 'Saved' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-log\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animation-log\",\n          children: /*#__PURE__*/_jsxDEV(TypingAnimation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, chatLog.length, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSend,\n      className: \"chat-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chat-input\",\n        placeholder: \"Type your message...\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatBox, \"e32c7fpD+qyRzI+i8VnOncZzQLY=\");\n_c = ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["useEffect","useState","TypingAnimation","axios","jsxDEV","_jsxDEV","API_URL","ChatBox","_s","input","setInput","answer","setAnswer","isLoading","setIsLoading","accessToken","localStorage","getItem","chatLog","setChatLog","savedChatLog","JSON","parse","setItem","stringify","handleSend","event","preventDefault","navigate","prevChatLog","type","message","saved","rest_api","response","fetch","method","headers","responseText","text","error","console","handleSaveMessage","index","post","content","status","newChatLog","err","log","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","disabled","length","onSubmit","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/crina/Documents/projects1/webproject/project/app/src/components/ChatBox.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport TypingAnimation from \"./TypingAnimation\";\r\nimport axios from \"axios\";\r\nconst API_URL = \"http://localhost:8080\"\r\n\r\n\r\n\r\n\r\nexport default function ChatBox(){\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const [answer, setAnswer] = useState(\"\");\r\n    //const [chatLog, setChatLog] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let accessToken = localStorage.getItem('accessToken');\r\n\r\n    const [chatLog, setChatLog] = useState(() => {\r\n        const savedChatLog = localStorage.getItem('chatLog');\r\n        return savedChatLog ? JSON.parse(savedChatLog) : [];\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Save chatLog to localStorage whenever it changes\r\n        localStorage.setItem('chatLog', JSON.stringify(chatLog));\r\n    }, [chatLog]);\r\n\r\n\r\n\r\n    const handleSend = async (event) => {\r\n        event.preventDefault();\r\n        if(!accessToken) {\r\n            navigate('/login')\r\n        }else{\r\n            setChatLog((prevChatLog) => [...prevChatLog, {type: 'user', message: input, saved: false}]);\r\n            const rest_api = \"http://localhost:8080/bot/chat?prompt=\" + input;\r\n            setIsLoading(true);\r\n            try {   //my model is handled at the backend, as well as the key for security reasons\r\n                const response = await fetch(rest_api, {\r\n                    method: 'GET',\r\n                    headers: {\"Content-Type\": \"application/text\"},\r\n                });\r\n                const responseText = await response.text()\r\n                setChatLog((prevChatLog) => [...prevChatLog, {type: \"bot\", message: responseText}])\r\n                setIsLoading(false);\r\n                setInput('');\r\n\r\n                // setAnswer(textResponse);\r\n            } catch (error) {\r\n                setIsLoading(false)\r\n                console.error(\"Fetching error: \", error);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    //<!--the button has to be in the form, for onSubmit to be triggered by the button\r\n    const handleSaveMessage = async (message,index, event)=> {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.post(API_URL + \"/note\", {\r\n                content: message\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${accessToken}` // Include the token in the header\r\n                }\r\n            });\r\n            if (response.status === 200 ) {\r\n                setChatLog(prevChatLog => {\r\n                    const newChatLog = [...prevChatLog];\r\n                    newChatLog[index] = { ...newChatLog[index], saved: true };\r\n                    return newChatLog;\r\n                });\r\n            }\r\n        }catch (err){\r\n            if(!err?.response){\r\n                console.log(\"No Server Response\");\r\n            }else if(err?.response.status === 401){\r\n                console.log(\"Error message: \", err.response.data);\r\n            }else if(err?.response.status === 403){\r\n                console.log(\"Bad request\");\r\n            }else{\r\n                console.log(\"Failed to access source\")\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //or the button can be outside the form, but then instead of having onSubmit={} we would have at the button onClick={handleSend}-->\r\n    return (\r\n        <div className=\"container-chat\">\r\n            <header className=\"chat-header\">\r\n                ChatGPT\r\n            </header>\r\n            <div className=\"chat-messages\">\r\n                {chatLog.map((message, index) => (\r\n                    <div key={index} className={`message ${message.type}`}>\r\n                        <div className=\"message-bubble\">\r\n                            {message.message}\r\n                        </div>\r\n                        {message.type === 'bot' && (\r\n                            <button\r\n                                className={`save-chat-convo ${message.saved ? 'saved' : ''}`}\r\n                                onClick={(event) => handleSaveMessage(message.message, index, event)}\r\n                                disabled={message.saved} // Disable the button if the message is saved\r\n                            >\r\n                                {message.saved ? 'Saved' : 'Save'}\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n\r\n                {\r\n                    isLoading && <div key={chatLog.length} className=\"typing-log\">\r\n                    <div className=\"animation-log\">\r\n                        <TypingAnimation/>\r\n                    </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <form onSubmit={handleSend} className=\"chat-input-area\">\r\n                <input\r\n                    className=\"chat-input\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                />\r\n                <button type=\"submit\" className=\"send-button\">\r\n                    Send\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}