{"ast":null,"code":"const OpenAI = require('openai');\n//const configuration = new OpenAI.Configuration({apiKey : \"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\"});\nconst openai = new OpenAI({\n  apiKey: \"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\",\n  dangerouslyAllowBrowser: true\n});\n\n//sends a request to openAi server\n//receive the response and extract it.\nexport async function sendMessageToOpenAI(message) {\n  try {\n    const response = await openai.chat.completions.create({\n      model: \"text-davinci-003\",\n      prompt: message,\n      max_tokens: 256,\n      top_p: 1,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    });\n    return response.choices[0]; //extracting only the text\n  } catch (error) {\n    console.log(\"Error in SendMessageToOpenAi: \", error);\n    return null;\n  }\n}","map":{"version":3,"names":["OpenAI","require","openai","apiKey","dangerouslyAllowBrowser","sendMessageToOpenAI","message","response","chat","completions","create","model","prompt","max_tokens","top_p","frequency_penalty","presence_penalty","choices","error","console","log"],"sources":["C:/Users/crina/Documents/projects1/webproject/project/app/src/openai.js"],"sourcesContent":["\r\nconst OpenAI = require('openai');\r\n//const configuration = new OpenAI.Configuration({apiKey : \"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\"});\r\nconst openai = new OpenAI({apiKey: \"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\", dangerouslyAllowBrowser:true});\r\n\r\n\r\n//sends a request to openAi server\r\n//receive the response and extract it.\r\nexport async function sendMessageToOpenAI(message){\r\n    try {\r\n        const response = await openai.chat.completions.create({\r\n            model: \"text-davinci-003\",\r\n            prompt: message,\r\n            max_tokens: 256,\r\n            top_p: 1,\r\n            frequency_penalty: 0,\r\n            presence_penalty: 0\r\n        });\r\n        return response.choices[0]; //extracting only the text\r\n    }catch (error){\r\n        console.log(\"Error in SendMessageToOpenAi: \", error);\r\n        return null;\r\n    }\r\n}"],"mappings":"AACA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC;AACA,MAAMC,MAAM,GAAG,IAAIF,MAAM,CAAC;EAACG,MAAM,EAAE,qDAAqD;EAAEC,uBAAuB,EAAC;AAAI,CAAC,CAAC;;AAGxH;AACA;AACA,OAAO,eAAeC,mBAAmBA,CAACC,OAAO,EAAC;EAC9C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,MAAM,CAACM,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;MAClDC,KAAK,EAAE,kBAAkB;MACzBC,MAAM,EAAEN,OAAO;MACfO,UAAU,EAAE,GAAG;MACfC,KAAK,EAAE,CAAC;MACRC,iBAAiB,EAAE,CAAC;MACpBC,gBAAgB,EAAE;IACtB,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACU,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC,QAAOC,KAAK,EAAC;IACVC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,KAAK,CAAC;IACpD,OAAO,IAAI;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}