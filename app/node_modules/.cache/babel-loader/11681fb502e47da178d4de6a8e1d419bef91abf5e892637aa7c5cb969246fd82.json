{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crina\\\\Documents\\\\projects1\\\\webproject\\\\project\\\\app\\\\src\\\\components\\\\DetailsBox.js\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport AuthService from \"../services/auth-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\nexport default function DetailsBox({\n  display,\n  func\n}) {\n  _s();\n  let loginSection = null;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userName, setUserName] = useState('');\n  const navigate = useNavigate();\n  if (display) {\n    loginSection = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Don't have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"register\",\n        children: \"Register Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n  const handleRegister = async event => {\n    event.preventDefault();\n    try {\n      //axios makes data as json, no need to stringify it\n      const response = await axios.post(API_URL + \"/user/register\", {\n        userName,\n        email,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      //axios does not have response.ok, but throws an error, if the response is not 200\n      console.log(\"User posted\", response.data);\n    } catch (err) {\n      var _err$response;\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        console.log(\"Error Message:\", err.response.data);\n      } else {}\n    }\n  };\n\n  //using pure javascript\n  const handleSubmit = async event => {\n    //prevents the page loading after the event happened\n    event.preventDefault();\n    const input = {\n      userName,\n      email,\n      password\n    };\n\n    //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\n    await fetch('http://localhost:8080/user/register', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(input)\n    }).then(response => {\n      //server response\n      if (response.ok) {\n        console.log(\"User posted\");\n        return response.text();\n      }\n      throw new Error('HTTP error! status: ${response.status}');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: func\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), !display && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userName\",\n          children: \"User name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"userName\",\n          name: \"userName\",\n          value: userName,\n          onChange: e => setUserName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), !display && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: func\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), loginSection]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(DetailsBox, \"e0kc/07HL0eCN+obvMOnF6qsnzQ=\", false, function () {\n  return [useNavigate];\n});\n_c = DetailsBox;\nvar _c;\n$RefreshReg$(_c, \"DetailsBox\");","map":{"version":3,"names":["Link","useNavigate","useState","axios","AuthService","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","DetailsBox","display","func","_s","loginSection","email","setEmail","password","setPassword","userName","setUserName","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","to","handleRegister","event","preventDefault","response","post","headers","withCredentials","console","log","data","err","_err$response","status","handleSubmit","input","fetch","method","body","JSON","stringify","then","ok","text","Error","className","onSubmit","htmlFor","type","id","name","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/crina/Documents/projects1/webproject/project/app/src/components/DetailsBox.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"../services/auth-service\";\r\n\r\nconst API_URL = \"http://localhost:8080\"\r\n\r\n\r\nexport default function DetailsBox({display, func}){\r\n    let loginSection = null;\r\n\r\n    const[email, setEmail] = useState('');\r\n    const[password, setPassword] = useState('');\r\n    const[userName, setUserName] = useState('');\r\n\r\n\r\n    const navigate = useNavigate();\r\n    if(display){\r\n        loginSection = (\r\n            <>\r\n                <p>Don't have an account?</p>\r\n                <Link to=\"register\">Register Now</Link>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    const handleRegister = async (event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            //axios makes data as json, no need to stringify it\r\n           const response = await axios.post(API_URL + \"/user/register\", {userName, email, password},\r\n                {\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    withCredentials : true\r\n                }\r\n            );\r\n           //axios does not have response.ok, but throws an error, if the response is not 200\r\n            console.log(\"User posted\", response.data)\r\n        }catch (err){\r\n            if(!err?.response){\r\n                console.log(\"No Server Response\");\r\n            }else if(err.response?.status === 400){\r\n                console.log(\"Error Message:\", err.response.data);\r\n            }else{}\r\n        }\r\n    }\r\n\r\n\r\n     //using pure javascript\r\n        const handleSubmit = async (event) => {\r\n            //prevents the page loading after the event happened\r\n            event.preventDefault();\r\n            const input = {userName, email, password};\r\n\r\n\r\n            //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\r\n            await fetch('http://localhost:8080/user/register',{\r\n                method: 'POST',\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(input)\r\n            }).then(response => {\r\n                //server response\r\n                if (response.ok) {\r\n                    console.log(\"User posted\")\r\n                    return response.text();\r\n                }\r\n                throw new Error('HTTP error! status: ${response.status}');\r\n            });\r\n\r\n        }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <form onSubmit={handleSubmit} className=\"login-form\">\r\n                <h1>{func}</h1>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"text\" id=\"email\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\r\n                </div>\r\n                    {!display && (\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"userName\">User name</label>\r\n                            <input type=\"text\" id=\"userName\" name=\"userName\" value={userName} onChange={(e) => setUserName(e.target.value)} required/>\r\n                        </div>\r\n                    )}\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required/>\r\n                    {!display && (\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                            <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" required/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <button type=\"submit\" >{func}</button>\r\n                {loginSection}\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}