{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crina\\\\Documents\\\\projects1\\\\webproject\\\\project\\\\app\\\\src\\\\components\\\\DetailsBox.js\",\n  _s = $RefreshSig$();\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useRef } from \"react\";\nimport AuthContext from \"../utils/AuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\nexport default function DetailsBox({\n  display,\n  func\n}) {\n  _s();\n  var _location$state;\n  const {\n    setAuth\n  } = useContext(AuthContext);\n  const userRef = useRef();\n  const errRef = useRef();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userName, setUserName] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) || \"/\";\n  function validateEmail(email) {\n    let pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return pattern.test(email);\n  }\n  const getPasswordError = password => {\n    if (password.length < 8) return \"Password must have at least 8 characters.\";\n    if (!/[A-Z]/.test(password)) return \"Password must include an uppercase letter.\";\n    if (!/[a-z]/.test(password)) return \"Password must include a lowercase letter.\";\n    if (!/[0-9]/.test(password)) return \"Password must include a number.\";\n    return null;\n  };\n  const handleRegister = async event => {\n    event.preventDefault();\n    let checker = isPasswordStrong(password);\n    if (!validateEmail(email)) {\n      setErrMsg(\"Invalid email\");\n    } else if (!checker.every(element => element === true)) {\n      if (!checker[0]) {\n        setErrMsg(\"Password needs to have at least 8 characters\");\n      } else if (!checker[1]) {\n        setErrMsg(\"Password needs to have at least 1 uppercase letter\");\n      } else if (!checker[2]) {\n        setErrMsg(\"Password needs to have at least 1 lowercase letter\");\n      } else if (!checker[3]) {\n        setErrMsg(\"Password needs to have at least 1 number\");\n      }\n    } else {\n      try {\n        //axios makes data as json, no need to stringify it\n        const response = await axios.post(API_URL + \"/user/register\", {\n          userName,\n          email,\n          password\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        //axios does not have response.ok, but throws an error, if the response is not 200\n        console.log(\"User posted\", response.data);\n        navigate(\"/login\");\n      } catch (err) {\n        var _err$response, _err$response2;\n        if (!(err !== null && err !== void 0 && err.response)) {\n          console.log(\"No Server Response\");\n        } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n          //missing user details\n          setErrMsg(err.response.data);\n          console.log(\"Error Message:\", err.response.data);\n        } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 409) {\n          //user already exists\n          console.log(\"Error Message\", err.response.data);\n          setErrMsg(err.response.data);\n        } else {\n          setErrMsg(\"Registration failed\");\n          console.log(\"Registration failed\");\n        }\n        errRef.current.focus();\n      }\n    }\n  };\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      var _response$data;\n      //axios makes data as json, no need to stringify it\n      const response = await axios.post(API_URL + \"/user/authenticate\", {\n        email,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      //axios does not have response.ok, but throws an error, if the response is not 200\n      console.log(\"User logged in\", JSON.stringify(response.data));\n      const accessToken = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.token;\n      setAuth({\n        userName,\n        email,\n        password,\n        accessToken\n      });\n      localStorage.setItem(\"accessToken\", accessToken);\n      setPassword(\"\");\n      setUserName(\"\");\n      setEmail(\"\");\n      navigate(from, {\n        replace: true\n      });\n    } catch (err) {\n      var _err$response3;\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 403) {\n        //missing user details\n        setErrMsg(\"User does not exist\");\n        console.log(\"User does not exist\");\n      } else {\n        setErrMsg(\"Login failed\");\n        console.log(\"Login failed\");\n      }\n      errRef.current.focus();\n    }\n  };\n\n  //happens only when the component loads\n  useEffect(() => {\n    if (userRef.current) {\n      userRef.current.focus();\n    }\n  }, []);\n  useEffect(() => {\n    setErrMsg('');\n  }, [userName, email, password]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: display ? handleLogin : handleRegister,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: func\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          style: {\n            fontSize: \"25px\"\n          },\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          ref: userRef,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), !display && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userName\",\n          style: {\n            fontSize: \"25px\"\n          },\n          children: \"User name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"userName\",\n          name: \"userName\",\n          value: userName,\n          onChange: e => setUserName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          style: {\n            fontSize: \"25px\"\n          },\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: func\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), display && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Don't have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"register\",\n          children: \"Register Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n_s(DetailsBox, \"dpI5zkfasNBiAtDioRhy34rK5Fk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = DetailsBox;\nvar _c;\n$RefreshReg$(_c, \"DetailsBox\");","map":{"version":3,"names":["Link","useLocation","useNavigate","useContext","useEffect","useState","axios","useRef","AuthContext","jsxDEV","_jsxDEV","API_URL","DetailsBox","display","func","_s","_location$state","setAuth","userRef","errRef","email","setEmail","password","setPassword","userName","setUserName","errMsg","setErrMsg","navigate","location","from","state","validateEmail","pattern","test","getPasswordError","length","handleRegister","event","preventDefault","checker","isPasswordStrong","every","element","response","post","headers","console","log","data","err","_err$response","_err$response2","status","current","focus","handleLogin","_response$data","JSON","stringify","accessToken","token","localStorage","setItem","replace","_err$response3","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","ref","htmlFor","style","fontSize","type","id","name","value","onChange","e","target","required","to","_c","$RefreshReg$"],"sources":["C:/Users/crina/Documents/projects1/webproject/project/app/src/components/DetailsBox.js"],"sourcesContent":["import {Link, useLocation, useNavigate} from \"react-router-dom\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useRef} from \"react\";\r\nimport AuthContext from \"../utils/AuthProvider\";\r\nconst API_URL = \"http://localhost:8080\"\r\n\r\n\r\nexport default function DetailsBox({display, func}){\r\n\r\n    const{setAuth} = useContext(AuthContext);\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n    const[email, setEmail] = useState('');\r\n    const[password, setPassword] = useState('');\r\n    const[userName, setUserName] = useState('');\r\n    const[errMsg, setErrMsg] = useState('');\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const from = location.state?.from || \"/\";\r\n\r\n\r\n    function validateEmail(email) {\r\n        let pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return pattern.test(email);\r\n    }\r\n\r\n    const getPasswordError = (password) => {\r\n        if (password.length < 8) return \"Password must have at least 8 characters.\";\r\n        if (!/[A-Z]/.test(password)) return \"Password must include an uppercase letter.\";\r\n        if (!/[a-z]/.test(password)) return \"Password must include a lowercase letter.\";\r\n        if (!/[0-9]/.test(password)) return \"Password must include a number.\";\r\n        return null;\r\n    };\r\n\r\n\r\n\r\n    const handleRegister = async (event) =>{\r\n        event.preventDefault();\r\n        let checker = isPasswordStrong(password);\r\n        if(!validateEmail(email)){\r\n            setErrMsg(\"Invalid email\");\r\n        } else if(!checker.every(element => element === true)){\r\n            if(!checker[0]){\r\n                setErrMsg(\"Password needs to have at least 8 characters\");\r\n            }else if(!checker[1]){\r\n                setErrMsg(\"Password needs to have at least 1 uppercase letter\");\r\n            }else if(!checker[2]){\r\n                setErrMsg(\"Password needs to have at least 1 lowercase letter\");\r\n            }else if(!checker[3]){\r\n                setErrMsg(\"Password needs to have at least 1 number\");\r\n            }\r\n        } else {\r\n            try {\r\n                //axios makes data as json, no need to stringify it\r\n                const response = await axios.post(API_URL + \"/user/register\", {userName, email, password},\r\n                    {\r\n                        headers: {'Content-Type': 'application/json'},\r\n                    }\r\n                );\r\n                //axios does not have response.ok, but throws an error, if the response is not 200\r\n                console.log(\"User posted\", response.data)\r\n                navigate(\"/login\");\r\n            } catch (err) {\r\n                if (!err?.response) {\r\n                    console.log(\"No Server Response\");\r\n                } else if (err.response?.status === 400) { //missing user details\r\n                    setErrMsg(err.response.data);\r\n                    console.log(\"Error Message:\", err.response.data);\r\n                } else if (err.response?.status === 409) { //user already exists\r\n                    console.log(\"Error Message\", err.response.data);\r\n                    setErrMsg(err.response.data);\r\n                } else {\r\n                    setErrMsg(\"Registration failed\");\r\n                    console.log(\"Registration failed\");\r\n                }\r\n                 errRef.current.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const handleLogin = async (event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            //axios makes data as json, no need to stringify it\r\n            const response = await axios.post(API_URL + \"/user/authenticate\", { email, password},\r\n                {\r\n                    headers: {'Content-Type': 'application/json'},\r\n                }\r\n            );\r\n            //axios does not have response.ok, but throws an error, if the response is not 200\r\n            console.log(\"User logged in\", JSON.stringify(response.data));\r\n            const accessToken = response.data?.token;\r\n            setAuth({userName,email, password, accessToken});\r\n            localStorage.setItem(\"accessToken\", accessToken);\r\n            setPassword(\"\");\r\n            setUserName(\"\");\r\n            setEmail(\"\");\r\n            navigate(from, {replace:true});\r\n        }catch (err){\r\n            if(!err?.response){\r\n                console.log(\"No Server Response\");\r\n            }else if(err.response?.status === 403){ //missing user details\r\n                setErrMsg(\"User does not exist\");\r\n                console.log(\"User does not exist\");\r\n            } else{\r\n                setErrMsg(\"Login failed\");\r\n                console.log(\"Login failed\");\r\n            }\r\n             errRef.current.focus();\r\n        }\r\n    }\r\n\r\n    //happens only when the component loads\r\n    useEffect(()=> {\r\n        if(userRef.current) {\r\n            userRef.current.focus();\r\n        }\r\n    }, [])\r\n\r\n    useEffect(()=> {\r\n        setErrMsg('');\r\n    },[userName, email, password])\r\n\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <form onSubmit={display? handleLogin:handleRegister} className=\"login-form\">\r\n                <h1>{func}</h1>\r\n                <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"email\" style={{fontSize: \"25px\"}}>Email</label>\r\n                    <input  type=\"text\" id=\"email\" name=\"email\" value={email} ref={userRef}\r\n                            onChange={(e) => setEmail(e.target.value)} required/>\r\n                </div>\r\n                    {!display && (\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"userName\" style={{fontSize: \"25px\"}}>User name</label>\r\n                            <input type=\"text\" id=\"userName\" name=\"userName\" value={userName}\r\n                                   onChange={(e) => setUserName(e.target.value)} required/>\r\n                        </div>\r\n                    )}\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"password\" style={{fontSize: \"25px\"}}>Password</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" value={password}\r\n                           onChange={(e) => setPassword(e.target.value)} required/>\r\n                </div>\r\n                <button type=\"submit\" >{func}</button>\r\n                {display && (\r\n                    <div className=\"register-link\">\r\n                        <p>Don't have an account?</p>\r\n                        <Link to=\"register\">Register Now</Link>\r\n                    </div>\r\n                )\r\n            }\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}