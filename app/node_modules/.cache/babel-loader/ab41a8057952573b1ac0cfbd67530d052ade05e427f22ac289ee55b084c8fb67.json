{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crina\\\\Documents\\\\projects1\\\\webproject\\\\project\\\\app\\\\src\\\\components\\\\NoteBox.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../utils/AuthProvider\";\nimport axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\nexport default function NoteBox() {\n  _s();\n  const ITEMS_PER_PAGE = \"4\"; // Adjust this as needed\n\n  let accessToken = localStorage.getItem('accessToken');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [sidebarData, setSidebarData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [noteContent, setNoteContent] = useState(localStorage.getItem(\"noteContent\") || '');\n  // Initialize editMode from localStorage or default to false if not set\n  const [editMode, setEditMode] = useState(JSON.parse(localStorage.getItem(\"editMode\") || \"false\"));\n  const toggleButtonContent = isSidebarOpen ? 'X' : 'Get saved notes';\n  const [currentNoteId, setCurrentNoteId] = useState(JSON.parse(localStorage.getItem(\"currentNoteId\")) || null);\n  //for pagiation\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [pagesCache, setPagesCache] = useState({});\n  const navigate = useNavigate();\n  const displayButton = editMode ? 'Save Changes' : 'Save';\n  useEffect(() => {\n    localStorage.setItem(\"noteContent\", noteContent);\n  }, [noteContent]);\n  useEffect(() => {\n    // Save editMode to localStorage as a string\n    localStorage.setItem(\"editMode\", JSON.stringify(editMode));\n  }, [editMode]);\n  useEffect(() => {\n    localStorage.setItem(\"currentNoteId\", JSON.stringify(currentNoteId));\n  }, [currentNoteId]);\n  const handleSubmit = async event => {\n    //prevents the page loading after the event happened\n    event.preventDefault();\n    try {\n      const response = await axios.post(API_URL + \"/note\", {\n        content: noteContent\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}` // Include the token in the header\n        }\n      });\n      setNoteContent(\"\");\n      if (response.status === 200 && isSidebarOpen) {\n        console.log(\"mmm\");\n        await fetchData(currentPage);\n      }\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 401) {\n        console.log(\"Error message: \", err.response.data);\n        localStorage.removeItem('token');\n        localStorage.removeItem(\"editMode\");\n        localStorage.removeItem(\"noteContent\");\n        localStorage.removeItem(\"currentNoteId\");\n        alert(\"Your session has expired please log in again\");\n        navigate(\"/login\");\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 403) {\n        console.log(\"Bad request\");\n      } else {\n        console.log(\"Failed to access source\");\n      }\n    }\n  };\n  const editSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.put(API_URL + \"/note/api/\" + currentNoteId, noteContent, {\n        headers: {\n          'Content-Type': 'text/plain',\n          'Authorization': `Bearer ${accessToken}` // Include the token in the header\n        }\n      });\n      setNoteContent(\"\");\n      setEditMode(false);\n      if (response.status === 200) {\n        await fetchData(currentPage);\n      }\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 401) {\n        console.log(\"Error message: \", err.response.data);\n        localStorage.removeItem('token');\n        localStorage.removeItem(\"editMode\");\n        localStorage.removeItem(\"noteContent\");\n        localStorage.removeItem(\"currentNoteId\");\n        alert(\"Your session has expired please log in again\");\n        navigate(\"/login\");\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 403) {\n        console.log(\"Bad request\");\n      } else {\n        console.log(\"Failed to access source\");\n      }\n    }\n  };\n  const fetchData = async (pageNumber = 1) => {\n    const pageNum = pageNumber - 1;\n    //if (pagesCache[pageNum]) {\n    //  setSidebarData(pagesCache[pageNum].notes);\n    //  setTotalPages(pagesCache[pageNum].totalPages);\n    //  setCurrentPage(pagesCache[pageNum].currentPage);\n    // setIsLoading(false);\n    //} else {\n    setIsLoading(true);\n    try {\n      var _response$data, _response$data2, _response$data3;\n      const response = await axios.get(API_URL + \"/note\", {\n        params: {\n          page: pageNum,\n          size: ITEMS_PER_PAGE\n        },\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      /* setPagesCache({\r\n           ...pagesCache,\r\n           [pageNum]: {\r\n               notes: response.data?.notes,\r\n               totalPages: response.data?.totalPages,\r\n               currentPage: response.data?.currentPage\r\n           }\r\n       });*/\n      console.log(response);\n      setSidebarData((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.notes);\n      setTotalPages((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.totalPages);\n      setCurrentPage(((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.currentPage) + 1);\n      console.log(\"aaa\");\n      console.log(totalPages);\n      console.log(currentPage);\n      setIsLoading(false);\n    } catch (error) {\n      if ((error === null || error === void 0 ? void 0 : error.response.status) === 401) {\n        console.log(\"Error message: \", error.response.data);\n        localStorage.removeItem('token');\n        localStorage.removeItem(\"editMode\");\n        localStorage.removeItem(\"noteContent\");\n        localStorage.removeItem(\"currentNoteId\");\n        alert(\"Your session has expired please log in again\");\n        navigate(\"/login\");\n      } else {\n        console.error('Error fetching data:', error);\n        setIsLoading(false);\n      }\n    }\n    //}\n  };\n\n  //upon page load get the auth token as well, in case the user refreshes the page\n  useEffect(() => {\n    accessToken = localStorage.getItem('accessToken');\n  }, []);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n    if (!isSidebarOpen) {\n      setCurrentPage(1);\n      fetchData();\n    }\n  };\n  const handlePageClick = pageNumber => {\n    setCurrentPage(pageNumber);\n    fetchData(pageNumber);\n  };\n  const deleteRequest = async (noteId, event) => {\n    let answer = window.confirm(\"Are you sure you want to delete the note?\");\n    if (answer) {\n      event.preventDefault();\n      try {\n        const response = await axios.delete(API_URL + \"/note/\" + noteId, {\n          headers: {\n            'Authorization': `Bearer ${accessToken}`\n          }\n        });\n        if (response.status === 200) {\n          // 204 No Content is a common response for successful DELETE requests\n          // Update the UI accordingly, maybe by re-fetching the current page of items\n          await fetchData(currentPage);\n        }\n        console.log(\"aaaa\");\n      } catch (err) {\n        if (!(err !== null && err !== void 0 && err.response)) {\n          console.log(\"No Server Response\");\n        } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 404) {\n          console.log(\"Error message: \", err.response.data);\n          localStorage.removeItem('token');\n          localStorage.removeItem(\"editMode\");\n          localStorage.removeItem(\"noteContent\");\n          localStorage.removeItem(\"currentNoteId\");\n          alert(\"Your session has expired please log in again\");\n          navigate(\"/login\");\n        } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 403) {\n          console.log(\"Bad request\");\n        } else {\n          console.log(\"Failed to access source\");\n        }\n      }\n    }\n  };\n\n  // Pagination Component\n  const Pagination = ({\n    totalPages,\n    currentPage\n  }) => {\n    const maxPageNumbersToShow = 3;\n    const pages = [];\n    // Calculate the range of page numbers to show\n    // Calculate the range of page numbers to show\n    let startPage = Math.max(1, currentPage - Math.floor(maxPageNumbersToShow / 2));\n    let endPage = Math.min(totalPages, startPage + maxPageNumbersToShow - 1);\n\n    // Adjust the start page if we're at the end of the range\n    if (endPage === totalPages) {\n      startPage = Math.max(1, endPage - maxPageNumbersToShow + 1);\n    }\n\n    // Previous Page Link\n    pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonPag\",\n      onClick: () => handlePageClick(currentPage - 1),\n      disabled: currentPage === 1,\n      children: \"Previous\"\n    }, \"prev\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this));\n\n    // First Page Link (with ellipsis if necessary)\n    if (startPage > 1) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: e => {\n          e.preventDefault();\n          handlePageClick(1);\n        },\n        children: \"1\"\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this));\n      if (startPage > 2) pages.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"...\"\n      }, \"startEllipsis\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 43\n      }, this));\n    }\n\n    // Page Number Links\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: `pagination-link ${i === currentPage ? 'active' : ''}`,\n        onClick: e => {\n          e.preventDefault();\n          handlePageClick(i);\n        },\n        \"aria-current\": i === currentPage ? 'page' : undefined,\n        \"aria-disabled\": i === currentPage ? 'true' : 'false',\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this));\n    }\n\n    // Last Page Link (with ellipsis if necessary)\n    if (endPage < totalPages) {\n      if (endPage < totalPages - 1) pages.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"...\"\n      }, \"endEllipsis\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 54\n      }, this));\n      pages.push( /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: e => {\n          e.preventDefault();\n          handlePageClick(totalPages);\n        },\n        children: totalPages\n      }, totalPages, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this));\n    }\n\n    // Next Page Link\n    pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonPag\",\n      onClick: () => handlePageClick(currentPage + 1),\n      disabled: currentPage === totalPages,\n      children: \"Next\"\n    }, \"next\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-container\",\n      children: pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"titleNote\",\n        children: editMode ? 'Your Note' : 'Write your note here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: editMode ? editSubmit : handleSubmit,\n        className: \"note-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"noteContent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"noteContent\",\n          name: \"noteContent\",\n          rows: \"10\",\n          cols: \"50\",\n          class: \"input-box-note\",\n          value: noteContent,\n          onChange: e => setNoteContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-save\",\n            type: \"submit\",\n            children: displayButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 21\n          }, this), editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"discard-save\",\n            onClick: () => {\n              setEditMode(false);\n              setNoteContent('');\n            },\n            children: \"Done Viewing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allSideBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `sideBar-button ${toggleButtonContent}`,\n        onClick: toggleSidebar,\n        children: toggleButtonContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), isSidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Pagination, {\n            totalPages: totalPages,\n            currentPage: currentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notes-container\",\n            children: sidebarData && sidebarData.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"note-date\",\n                children: note.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"note-content\",\n                children: note.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"edit\",\n                onClick: () => {\n                  setNoteContent(note.content);\n                  setCurrentNoteId(note.id);\n                  setEditMode(true);\n                },\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"delete\",\n                onClick: e => deleteRequest(note.id, e),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 9\n  }, this);\n\n  //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\n  /* await fetch('http://localhost:8080/user/login/register',{\r\n       method: 'POST',\r\n       headers: {\"Content-Type\": \"application/json\"},\r\n       body: JSON.stringify(input)\r\n   }).then(response => {\r\n       //server response\r\n       if (response.ok) {\r\n           console.log(\"User posted\")\r\n           return response.text();\r\n       }\r\n       throw new Error('HTTP error! status: ${response.status}');\r\n   });\r\n  }*/\n}\n_s(NoteBox, \"3xbIE83fc6sC1J52gCR3xVwUq/s=\", false, function () {\n  return [useNavigate];\n});\n_c = NoteBox;\nvar _c;\n$RefreshReg$(_c, \"NoteBox\");","map":{"version":3,"names":["useContext","useEffect","useState","AuthContext","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","NoteBox","_s","ITEMS_PER_PAGE","accessToken","localStorage","getItem","isSidebarOpen","setIsSidebarOpen","sidebarData","setSidebarData","isLoading","setIsLoading","noteContent","setNoteContent","editMode","setEditMode","JSON","parse","toggleButtonContent","currentNoteId","setCurrentNoteId","currentPage","setCurrentPage","totalPages","setTotalPages","pagesCache","setPagesCache","navigate","displayButton","setItem","stringify","handleSubmit","event","preventDefault","response","post","content","headers","status","console","log","fetchData","err","data","removeItem","alert","editSubmit","put","pageNumber","pageNum","_response$data","_response$data2","_response$data3","get","params","page","size","notes","error","toggleSidebar","handlePageClick","deleteRequest","noteId","answer","window","confirm","delete","Pagination","maxPageNumbersToShow","pages","startPage","Math","max","floor","endPage","min","push","className","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","href","e","i","undefined","id","onSubmit","htmlFor","name","rows","cols","class","value","onChange","target","type","map","note","index","date","_c","$RefreshReg$"],"sources":["C:/Users/crina/Documents/projects1/webproject/project/app/src/components/NoteBox.js"],"sourcesContent":["import {useContext, useEffect, useState} from \"react\";\r\nimport AuthContext from \"../utils/AuthProvider\";\r\nimport axios from \"axios\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nconst API_URL = \"http://localhost:8080\"\r\n\r\n\r\nexport default function NoteBox(){\r\n\r\n    const ITEMS_PER_PAGE = \"4\"; // Adjust this as needed\r\n\r\n\r\n    let accessToken = localStorage.getItem('accessToken');\r\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n    const [sidebarData, setSidebarData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [noteContent, setNoteContent] = useState(localStorage.getItem(\"noteContent\") || '');\r\n// Initialize editMode from localStorage or default to false if not set\r\n    const [editMode, setEditMode] = useState(JSON.parse(localStorage.getItem(\"editMode\") || \"false\"));\r\n    const toggleButtonContent = isSidebarOpen ? 'X' : 'Get saved notes';\r\n    const [currentNoteId, setCurrentNoteId] = useState(\r\n        JSON.parse(localStorage.getItem(\"currentNoteId\")) || null\r\n    );\r\n    //for pagiation\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [pagesCache, setPagesCache] = useState({});\r\n    const navigate = useNavigate();\r\n    const displayButton = editMode? 'Save Changes' : 'Save';\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"noteContent\", noteContent);\r\n    }, [noteContent]);\r\n\r\n\r\n    useEffect(() => {\r\n        // Save editMode to localStorage as a string\r\n        localStorage.setItem(\"editMode\", JSON.stringify(editMode));\r\n    }, [editMode]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"currentNoteId\", JSON.stringify(currentNoteId));\r\n    }, [currentNoteId]);\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        //prevents the page loading after the event happened\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.post(API_URL + \"/note\", {\r\n                content: noteContent\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${accessToken}` // Include the token in the header\r\n                }\r\n            });\r\n            setNoteContent(\"\");\r\n            if (response.status === 200 && isSidebarOpen) {\r\n                console.log(\"mmm\")\r\n                await fetchData(currentPage);\r\n            }\r\n\r\n        }catch (err){\r\n            if(!err?.response){\r\n                console.log(\"No Server Response\");\r\n            }else if(err?.response.status === 401){\r\n                console.log(\"Error message: \", err.response.data);\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem(\"editMode\");\r\n                localStorage.removeItem(\"noteContent\");\r\n                localStorage.removeItem(\"currentNoteId\");\r\n                alert(\"Your session has expired please log in again\");\r\n                navigate(\"/login\")\r\n            }else if(err?.response.status === 403){\r\n                console.log(\"Bad request\");\r\n            }else{\r\n                console.log(\"Failed to access source\")\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const editSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.put(API_URL + \"/note/api/\" + currentNoteId,  noteContent,{\r\n                headers: {\r\n                    'Content-Type': 'text/plain',\r\n                    'Authorization': `Bearer ${accessToken}` // Include the token in the header\r\n                }\r\n            });\r\n            setNoteContent(\"\");\r\n            setEditMode(false);\r\n            if (response.status === 200 ) {\r\n                await fetchData(currentPage);\r\n            }\r\n        }catch (err){\r\n            if(!err?.response){\r\n                console.log(\"No Server Response\");\r\n            }else if(err?.response.status === 401){\r\n                console.log(\"Error message: \", err.response.data);\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem(\"editMode\");\r\n                localStorage.removeItem(\"noteContent\");\r\n                localStorage.removeItem(\"currentNoteId\");\r\n                alert(\"Your session has expired please log in again\");\r\n                navigate(\"/login\")\r\n            }else if(err?.response.status === 403){\r\n                console.log(\"Bad request\");\r\n            }else{\r\n                console.log(\"Failed to access source\")\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const fetchData = async (pageNumber = 1) => {\r\n        const pageNum = pageNumber - 1;\r\n        //if (pagesCache[pageNum]) {\r\n          //  setSidebarData(pagesCache[pageNum].notes);\r\n          //  setTotalPages(pagesCache[pageNum].totalPages);\r\n          //  setCurrentPage(pagesCache[pageNum].currentPage);\r\n           // setIsLoading(false);\r\n        //} else {\r\n            setIsLoading(true);\r\n            try {\r\n                const response = await axios.get(API_URL + \"/note\", {\r\n                    params: {\r\n                        page: pageNum,\r\n                        size: ITEMS_PER_PAGE\r\n                    },\r\n                    headers: {\r\n                        'Authorization': `Bearer ${accessToken}`\r\n                    }\r\n                });\r\n               /* setPagesCache({\r\n                    ...pagesCache,\r\n                    [pageNum]: {\r\n                        notes: response.data?.notes,\r\n                        totalPages: response.data?.totalPages,\r\n                        currentPage: response.data?.currentPage\r\n                    }\r\n                });*/\r\n                console.log(response);\r\n                setSidebarData(response.data?.notes);\r\n                setTotalPages(response.data?.totalPages);\r\n                setCurrentPage(response.data?.currentPage + 1);\r\n                console.log(\"aaa\");\r\n                console.log(totalPages);\r\n                console.log(currentPage);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                if(error?.response.status === 401) {\r\n                    console.log(\"Error message: \", error.response.data);\r\n                    localStorage.removeItem('token');\r\n                    localStorage.removeItem(\"editMode\");\r\n                    localStorage.removeItem(\"noteContent\");\r\n                    localStorage.removeItem(\"currentNoteId\");\r\n                    alert(\"Your session has expired please log in again\");\r\n                    navigate(\"/login\")\r\n                }else {\r\n                    console.error('Error fetching data:', error);\r\n                    setIsLoading(false);\r\n                }\r\n            }\r\n        //}\r\n    };\r\n\r\n\r\n\r\n\r\n    //upon page load get the auth token as well, in case the user refreshes the page\r\n    useEffect(() => {\r\n        accessToken = localStorage.getItem('accessToken');\r\n\r\n    }, []);\r\n\r\n    const toggleSidebar = () => {\r\n        setIsSidebarOpen(!isSidebarOpen);\r\n        if (!isSidebarOpen) {\r\n            setCurrentPage(1);\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n\r\n    const handlePageClick = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n        fetchData(pageNumber);\r\n    };\r\n\r\n\r\n    const deleteRequest = async (noteId, event) => {\r\n        let answer = window.confirm(\"Are you sure you want to delete the note?\")\r\n        if(answer){\r\n        event.preventDefault();\r\n        try{\r\n            const response = await axios.delete(API_URL + \"/note/\" + noteId, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${accessToken}`\r\n                },\r\n            });\r\n            if (response.status === 200) { // 204 No Content is a common response for successful DELETE requests\r\n                // Update the UI accordingly, maybe by re-fetching the current page of items\r\n                await fetchData(currentPage);\r\n            }\r\n            console.log(\"aaaa\")\r\n        }catch (err){\r\n            if(!err?.response){\r\n                console.log(\"No Server Response\");\r\n            }else if(err?.response.status === 404){\r\n                console.log(\"Error message: \", err.response.data);\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem(\"editMode\");\r\n                localStorage.removeItem(\"noteContent\");\r\n                localStorage.removeItem(\"currentNoteId\");\r\n                alert(\"Your session has expired please log in again\");\r\n                navigate(\"/login\")\r\n            }else if(err?.response.status === 403){\r\n                console.log(\"Bad request\");\r\n            }else{\r\n                console.log(\"Failed to access source\")\r\n            }\r\n\r\n        }\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    // Pagination Component\r\n    const Pagination = ({ totalPages, currentPage }) => {\r\n        const maxPageNumbersToShow = 3;\r\n        const pages = [];\r\n        // Calculate the range of page numbers to show\r\n        // Calculate the range of page numbers to show\r\n        let startPage = Math.max(1, currentPage - Math.floor(maxPageNumbersToShow / 2));\r\n        let endPage = Math.min(totalPages, startPage + maxPageNumbersToShow - 1);\r\n\r\n        // Adjust the start page if we're at the end of the range\r\n        if (endPage === totalPages) {\r\n            startPage = Math.max(1, endPage - maxPageNumbersToShow + 1);\r\n        }\r\n\r\n        // Previous Page Link\r\n        pages.push(\r\n            <button key=\"prev\" className=\"buttonPag\" onClick={() => handlePageClick(currentPage - 1)} disabled={currentPage === 1}>\r\n                Previous\r\n            </button>\r\n        );\r\n\r\n        // First Page Link (with ellipsis if necessary)\r\n        if (startPage > 1) {\r\n            pages.push(\r\n                <a href=\"#\" key={1} onClick={(e) => {\r\n                    e.preventDefault();\r\n                    handlePageClick(1);\r\n                }}>\r\n                    1\r\n                </a>\r\n            );\r\n            if (startPage > 2) pages.push(<span key=\"startEllipsis\">...</span>);\r\n        }\r\n\r\n        // Page Number Links\r\n        for (let i = startPage; i <= endPage; i++) {\r\n            pages.push(\r\n                <a\r\n                    href=\"#\"\r\n                    key={i}\r\n                    className={`pagination-link ${i === currentPage ? 'active' : ''}`}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        handlePageClick(i);\r\n                    }}\r\n                    aria-current={i === currentPage ? 'page' : undefined}\r\n                    aria-disabled={i === currentPage ? 'true' : 'false'}\r\n                >\r\n                    {i}\r\n                </a>\r\n            );\r\n        }\r\n\r\n        // Last Page Link (with ellipsis if necessary)\r\n        if (endPage < totalPages) {\r\n            if (endPage < totalPages - 1) pages.push(<span key=\"endEllipsis\">...</span>);\r\n            pages.push(\r\n                <a href= \"#\" key={totalPages} onClick={(e) => {\r\n                    e.preventDefault();\r\n                    handlePageClick(totalPages);}}>\r\n                    {totalPages}\r\n                </a>\r\n            );\r\n        }\r\n\r\n        // Next Page Link\r\n        pages.push(\r\n            <button key=\"next\" className=\"buttonPag\" onClick={() => handlePageClick(currentPage + 1)} disabled={currentPage === totalPages}>\r\n                Next\r\n            </button>\r\n        );\r\n\r\n        return <div className=\"pagination-container\">{pages}</div>;\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container-note\">\r\n            <div className='note-input-container'>\r\n                <h1 id=\"titleNote\">{editMode? 'Your Note' : 'Write your note here'}</h1>\r\n                <form onSubmit={editMode ? editSubmit: handleSubmit} className=\"note-form\">\r\n                    <label htmlFor=\"noteContent\"></label>\r\n                    <textarea id=\"noteContent\" name=\"noteContent\" rows=\"10\" cols=\"50\" class=\"input-box-note\" value={noteContent} onChange={(e) => setNoteContent(e.target.value)} />\r\n                    <div className=\"note-buttons\">\r\n                    <button className=\"note-save\" type=\"submit\">{displayButton}</button>\r\n                    {editMode && (\r\n                        <button className=\"discard-save\" onClick={() => {setEditMode(false); setNoteContent('')}}>Done Viewing</button>\r\n                    )}\r\n                </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"allSideBar\">\r\n                <button className={`sideBar-button ${toggleButtonContent}`} onClick={toggleSidebar}>{toggleButtonContent}</button>\r\n                {isSidebarOpen && (\r\n                    <div className=\"sidebar\">\r\n                        {isLoading ? (\r\n                            <p>Loading...</p>\r\n                        ) : (\r\n                            <>\r\n\r\n                                    <Pagination totalPages={totalPages} currentPage={currentPage} />\r\n\r\n                                <div className=\"notes-container\">\r\n                                    {sidebarData && sidebarData.map((note, index) => (\r\n                                        <div className=\"note-item\" key={index}>\r\n                                            <div className=\"note-date\">{note.date}</div>\r\n                                            <div className=\"note-content\">{note.content}</div>\r\n                                            <a href=\"#\" className=\"edit\" onClick={()=> {setNoteContent(note.content); setCurrentNoteId(note.id); setEditMode(true);}}>View</a>\r\n                                            <a href=\"#\" className=\"delete\" onClick={(e)=> deleteRequest(note.id, e)}>Delete</a>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n        //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\r\n        /* await fetch('http://localhost:8080/user/login/register',{\r\n             method: 'POST',\r\n             headers: {\"Content-Type\": \"application/json\"},\r\n             body: JSON.stringify(input)\r\n         }).then(response => {\r\n             //server response\r\n             if (response.ok) {\r\n                 console.log(\"User posted\")\r\n                 return response.text();\r\n             }\r\n             throw new Error('HTTP error! status: ${response.status}');\r\n         });\r\n\r\n     }*/\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}