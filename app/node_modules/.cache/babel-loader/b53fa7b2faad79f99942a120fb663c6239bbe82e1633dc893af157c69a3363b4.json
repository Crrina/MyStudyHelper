{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crina\\\\Documents\\\\projects1\\\\webproject\\\\project\\\\app\\\\src\\\\components\\\\NoteBox.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport AuthContext from \"../services/AuthProvider\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\nexport default function NoteBox() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const accessToken = auth.accessToken;\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    //user is not authenticated\n    if (accessToken === null) {\n      navigate(\"*\");\n    }\n    //prevents the page loading after the event happened\n    event.preventDefault();\n    try {\n      const response = await axios.post(API_URL + \"/note\", {\n        // Request payload goes here\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}` // Include the token in the header\n        }\n      });\n      console.log(\"Response from the authenticated request:\", response.data);\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {}\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"titleNote\",\n        children: \"Write your note here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"note-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"note\",\n          name: \"note\",\n          rows: \"10\",\n          cols: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"lll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n\n  //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\n  /* await fetch('http://localhost:8080/user/login/register',{\r\n       method: 'POST',\r\n       headers: {\"Content-Type\": \"application/json\"},\r\n       body: JSON.stringify(input)\r\n   }).then(response => {\r\n       //server response\r\n       if (response.ok) {\r\n           console.log(\"User posted\")\r\n           return response.text();\r\n       }\r\n       throw new Error('HTTP error! status: ${response.status}');\r\n   });\r\n  }*/\n}\n_s(NoteBox, \"AdxE1ZUl8FCYtQG5e6b0YNKoecU=\", false, function () {\n  return [useNavigate];\n});\n_c = NoteBox;\nvar _c;\n$RefreshReg$(_c, \"NoteBox\");","map":{"version":3,"names":["useContext","AuthContext","axios","useNavigate","jsxDEV","_jsxDEV","API_URL","NoteBox","_s","auth","accessToken","navigate","handleSubmit","event","preventDefault","response","post","headers","console","log","data","err","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","name","rows","cols","type","_c","$RefreshReg$"],"sources":["C:/Users/crina/Documents/projects1/webproject/project/app/src/components/NoteBox.js"],"sourcesContent":["import {useContext} from \"react\";\r\nimport AuthContext from \"../services/AuthProvider\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nconst API_URL = \"http://localhost:8080\"\r\n\r\n\r\nexport default function NoteBox(){\r\n\r\n    const{auth} = useContext(AuthContext);\r\n    const accessToken = auth.accessToken;\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        //user is not authenticated\r\n        if(accessToken === null){\r\n            navigate(\"*\");\r\n        }\r\n        //prevents the page loading after the event happened\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.post(API_URL + \"/note\", {\r\n                // Request payload goes here\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${accessToken}` // Include the token in the header\r\n                }\r\n            });\r\n\r\n            console.log(\"Response from the authenticated request:\", response.data);\r\n\r\n        }catch (err){\r\n            if(!err?.response){\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div>\r\n                <h1 id=\"titleNote\">Write your note here</h1>\r\n                <form onSubmit={handleSubmit} className=\"note-form\">\r\n                    <label htmlFor=\"note\"></label>\r\n                    <textarea id=\"note\" name=\"note\" rows=\"10\" cols=\"50\" />\r\n                </form>\r\n                <button type=\"submit\">Save</button>\r\n            </div>\r\n            <div>\r\n                <p>lll</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n        //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\r\n        /* await fetch('http://localhost:8080/user/login/register',{\r\n             method: 'POST',\r\n             headers: {\"Content-Type\": \"application/json\"},\r\n             body: JSON.stringify(input)\r\n         }).then(response => {\r\n             //server response\r\n             if (response.ok) {\r\n                 console.log(\"User posted\")\r\n                 return response.text();\r\n             }\r\n             throw new Error('HTTP error! status: ${response.status}');\r\n         });\r\n\r\n     }*/\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}