{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crina\\\\Documents\\\\projects1\\\\webproject\\\\project\\\\app\\\\src\\\\components\\\\NoteBox.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../services/AuthProvider\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\nexport default function NoteBox() {\n  _s();\n  const ITEMS_PER_PAGE = 5; // Adjust this as needed\n  const navigate = useNavigate();\n  let accessToken = localStorage.getItem('accessToken');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [sidebarData, setSidebarData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [noteContent, setNoteContent] = useState('');\n\n  //for pagiation\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const handleSubmit = async event => {\n    console.log(\"aa\");\n    //user is not authenticated\n    if (accessToken === null) {\n      navigate(\"*\");\n    }\n    //prevents the page loading after the event happened\n    event.preventDefault();\n    try {\n      const response = await axios.post(API_URL + \"/note\", {\n        content: noteContent\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}` // Include the token in the header\n        }\n      });\n      console.log(\"Got empty response\");\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 401) {\n        console.log(\"Error message: \", err.response.data);\n      } else if ((err === null || err === void 0 ? void 0 : err.response.status) === 403) {\n        console.log(\"Bad request\");\n      } else {\n        console.log(\"Failed to access source\");\n      }\n    }\n  };\n  const fetchData = async (pageNumber = 0) => {\n    setIsLoading(true);\n    console.log(accessToken);\n    console.log(pageNumber);\n    console.log(ITEMS_PER_PAGE);\n    try {\n      var _response$data, _response$data2, _response$data3;\n      const response = await axios({\n        method: 'get',\n        url: API_URL + \"/note\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}`\n        },\n        data: {\n          page: pageNumber,\n          size: ITEMS_PER_PAGE\n        }\n      });\n      console.log('ebati');\n      console.log(response);\n      setSidebarData((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.notes);\n      setTotalPages((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.totalPages);\n      setCurrentPage((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.currentPage);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setIsLoading(false);\n    }\n  };\n\n  //upon page load get the auth token as well, in case the user refreshes the page\n  useEffect(() => {\n    accessToken = localStorage.getItem('accessToken');\n  }, []);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n    if (!isSidebarOpen) {\n      fetchData();\n    }\n  };\n  const handlePageClick = pageNumber => {\n    setCurrentPage(pageNumber);\n    fetchData(pageNumber);\n  };\n\n  // Pagination Component\n  const Pagination = ({\n    totalPages,\n    currentPage\n  }) => {\n    const pages = [];\n    for (let i = 1; i <= totalPages; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageClick(i),\n        disabled: i === currentPage,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"titleNote\",\n        children: \"Write your note here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"note-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"noteContent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"noteContent\",\n          name: \"noteContent\",\n          rows: \"10\",\n          cols: \"50\",\n          value: noteContent,\n          onChange: e => setNoteContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSidebar,\n        children: \"Get saved notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), isSidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Pagination, {\n            totalPages: totalPages,\n            currentPage: currentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sideItem\",\n            children: sidebarData && sidebarData.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Date: \", note.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Content: \", note.content]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n\n  //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\n  /* await fetch('http://localhost:8080/user/login/register',{\r\n       method: 'POST',\r\n       headers: {\"Content-Type\": \"application/json\"},\r\n       body: JSON.stringify(input)\r\n   }).then(response => {\r\n       //server response\r\n       if (response.ok) {\r\n           console.log(\"User posted\")\r\n           return response.text();\r\n       }\r\n       throw new Error('HTTP error! status: ${response.status}');\r\n   });\r\n  }*/\n}\n_s(NoteBox, \"aVfVQ65V/WPWRZk7RaVm0Tda09U=\", false, function () {\n  return [useNavigate];\n});\n_c = NoteBox;\nvar _c;\n$RefreshReg$(_c, \"NoteBox\");","map":{"version":3,"names":["useContext","useEffect","useState","AuthContext","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","NoteBox","_s","ITEMS_PER_PAGE","navigate","accessToken","localStorage","getItem","isSidebarOpen","setIsSidebarOpen","sidebarData","setSidebarData","isLoading","setIsLoading","noteContent","setNoteContent","currentPage","setCurrentPage","totalPages","setTotalPages","handleSubmit","event","console","log","preventDefault","response","post","content","headers","err","status","data","fetchData","pageNumber","_response$data","_response$data2","_response$data3","method","url","page","size","notes","error","toggleSidebar","handlePageClick","Pagination","pages","i","push","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","onSubmit","htmlFor","name","rows","cols","value","onChange","e","target","type","map","note","index","date","_c","$RefreshReg$"],"sources":["C:/Users/crina/Documents/projects1/webproject/project/app/src/components/NoteBox.js"],"sourcesContent":["import {useContext, useEffect, useState} from \"react\";\r\nimport AuthContext from \"../services/AuthProvider\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nconst API_URL = \"http://localhost:8080\"\r\n\r\n\r\nexport default function NoteBox(){\r\n\r\n    const ITEMS_PER_PAGE = 5; // Adjust this as needed\r\n    const navigate = useNavigate();\r\n    let accessToken = localStorage.getItem('accessToken');\r\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n    const [sidebarData, setSidebarData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [noteContent, setNoteContent] = useState('');\r\n\r\n    //for pagiation\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        console.log(\"aa\")\r\n        //user is not authenticated\r\n        if(accessToken === null){\r\n            navigate(\"*\");\r\n        }\r\n        //prevents the page loading after the event happened\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.post(API_URL + \"/note\", {\r\n                content: noteContent\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${accessToken}` // Include the token in the header\r\n                }\r\n            });\r\n\r\n            console.log(\"Got empty response\");\r\n        }catch (err){\r\n            if(!err?.response){\r\n                console.log(\"No Server Response\");\r\n            }else if(err?.response.status === 401){\r\n                console.log(\"Error message: \", err.response.data);\r\n            }else if(err?.response.status === 403){\r\n                console.log(\"Bad request\");\r\n            }else{\r\n                console.log(\"Failed to access source\")\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const fetchData = async (pageNumber = 0) => {\r\n        setIsLoading(true);\r\n        console.log(accessToken)\r\n        console.log(pageNumber)\r\n        console.log(ITEMS_PER_PAGE)\r\n        try {\r\n            const response = await axios({\r\n                method: 'get',\r\n                url: API_URL + \"/note\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${accessToken}`\r\n                },\r\n                data: {\r\n                    page: pageNumber,\r\n                    size: ITEMS_PER_PAGE\r\n                }\r\n            });\r\n            console.log('ebati')\r\n            console.log(response);\r\n            setSidebarData(response.data?.notes);\r\n            setTotalPages(response.data?.totalPages);\r\n            setCurrentPage(response.data?.currentPage);\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    //upon page load get the auth token as well, in case the user refreshes the page\r\n    useEffect(() => {\r\n        accessToken = localStorage.getItem('accessToken');\r\n\r\n    }, []);\r\n\r\n    const toggleSidebar = () => {\r\n        setIsSidebarOpen(!isSidebarOpen);\r\n        if (!isSidebarOpen) {\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n\r\n    const handlePageClick = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n        fetchData(pageNumber);\r\n    };\r\n\r\n\r\n\r\n    // Pagination Component\r\n    const Pagination = ({ totalPages, currentPage }) => {\r\n        const pages = [];\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            pages.push(\r\n                <button key={i} onClick={() => handlePageClick(i)} disabled={i === currentPage}>\r\n                    {i}\r\n                </button>\r\n            );\r\n        }\r\n        return <div>{pages}</div>;\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div>\r\n                <h1 id=\"titleNote\">Write your note here</h1>\r\n                <form onSubmit={handleSubmit} className=\"note-form\">\r\n                    <label htmlFor=\"noteContent\"></label>\r\n                    <textarea id=\"noteContent\" name=\"noteContent\" rows=\"10\" cols=\"50\" value={noteContent} onChange={(e) => setNoteContent(e.target.value)} />\r\n                    <button type=\"submit\">Save</button>\r\n                </form>\r\n            </div>\r\n            <div>\r\n                <button onClick={toggleSidebar}>Get saved notes</button>\r\n                {isSidebarOpen && (\r\n                    <div className=\"sidebar\">\r\n                        {isLoading ? (\r\n                            <p>Loading...</p>\r\n                        ) : (\r\n                            <>\r\n                                <Pagination totalPages={totalPages} currentPage={currentPage} />\r\n                                <div className=\"sideItem\">\r\n                                    {sidebarData && sidebarData.map((note, index) => (\r\n                                        <div key={index}>\r\n                                            <p>Date: {note.date}</p>\r\n                                            <p>Content: {note.content}</p>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n        //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\r\n        /* await fetch('http://localhost:8080/user/login/register',{\r\n             method: 'POST',\r\n             headers: {\"Content-Type\": \"application/json\"},\r\n             body: JSON.stringify(input)\r\n         }).then(response => {\r\n             //server response\r\n             if (response.ok) {\r\n                 console.log(\"User posted\")\r\n                 return response.text();\r\n             }\r\n             throw new Error('HTTP error! status: ${response.status}');\r\n         });\r\n\r\n     }*/\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}