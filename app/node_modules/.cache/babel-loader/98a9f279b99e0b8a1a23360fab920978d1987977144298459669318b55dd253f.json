{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crina\\\\Documents\\\\projects1\\\\webproject\\\\project\\\\app\\\\src\\\\components\\\\DetailsBox.js\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\nexport default function DetailsBox({\n  display,\n  func\n}) {\n  _s();\n  const errRef = useRef();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userName, setUserName] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  const navigate = useNavigate();\n  const handleRegister = async event => {\n    event.preventDefault();\n    try {\n      //axios makes data as json, no need to stringify it\n      const response = await axios.post(API_URL + \"/user/register\", {\n        userName,\n        email,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      //axios does not have response.ok, but throws an error, if the response is not 200\n      console.log(\"User posted\", response.data);\n    } catch (err) {\n      var _err$response, _err$response2;\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        //missing user details\n        console.log(\"Error Message:\", err.response.data);\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 409) {\n        //user already exists\n        console.log(\"Error Message\", err.response.data);\n      } else {\n        console.log(\"Registration failed\");\n      }\n      // errRef.current.focus();\n    }\n  };\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      var _response$data;\n      //axios makes data as json, no need to stringify it\n      const response = await axios.post(API_URL + \"/user/authenticate\", {\n        email,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      //axios does not have response.ok, but throws an error, if the response is not 200\n      console.log(\"User logged in\", JSON.stringify(response.data));\n      const accessToken = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.token;\n      setAuth({\n        user,\n        password,\n        accessToken\n      });\n      setUser(\"\");\n      setPassword(\"\");\n      setSuccess(true);\n    } catch (err) {\n      var _err$response3;\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 403) {\n        //missing user details\n        console.log(\"User does not exist\");\n      } else {\n        console.log(\"Login failed\");\n      }\n      // errRef.current.focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: func\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), !display && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userName\",\n          children: \"User name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"userName\",\n          name: \"userName\",\n          value: userName,\n          onChange: e => setUserName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), !display && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: func\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), display && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Don't have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"register\",\n          children: \"Register Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n\n  //using pure javascript\n  /* const handleSubmit = async (event) => {\r\n       //prevents the page loading after the event happened\r\n       event.preventDefault();\r\n       const input = {userName, email, password};\r\n  \n       //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\r\n       await fetch('http://localhost:8080/user/register',{\r\n           method: 'POST',\r\n           headers: {\"Content-Type\": \"application/json\"},\r\n           body: JSON.stringify(input)\r\n       }).then(response => {\r\n           //server response\r\n           if (response.ok) {\r\n               console.log(\"User posted\")\r\n               return response.text();\r\n           }\r\n           throw new Error('HTTP error! status: ${response.status}');\r\n       });\r\n     }*/\n}\n_s(DetailsBox, \"QG0xqx/Ovc7+qaP5asRcbAlhz00=\", false, function () {\n  return [useNavigate];\n});\n_c = DetailsBox;\nvar _c;\n$RefreshReg$(_c, \"DetailsBox\");","map":{"version":3,"names":["Link","useNavigate","useState","axios","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","DetailsBox","display","func","_s","errRef","email","setEmail","password","setPassword","userName","setUserName","errMsg","setErrMsg","success","setSuccess","navigate","handleRegister","event","preventDefault","response","post","headers","console","log","data","err","_err$response","_err$response2","status","handleLogin","_response$data","JSON","stringify","accessToken","token","setAuth","user","setUser","_err$response3","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","value","onChange","e","target","required","to","_c","$RefreshReg$"],"sources":["C:/Users/crina/Documents/projects1/webproject/project/app/src/components/DetailsBox.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useRef} from \"react\";\r\nconst API_URL = \"http://localhost:8080\"\r\n\r\n\r\nexport default function DetailsBox({display, func}){\r\n\r\n    const errRef = useRef();\r\n    const[email, setEmail] = useState('');\r\n    const[password, setPassword] = useState('');\r\n    const[userName, setUserName] = useState('');\r\n    const[errMsg, setErrMsg] = useState('');\r\n    const[success, setSuccess] = useState(false);\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const handleRegister = async (event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            //axios makes data as json, no need to stringify it\r\n           const response = await axios.post(API_URL + \"/user/register\", {userName, email, password},\r\n                {\r\n                    headers: {'Content-Type': 'application/json'},\r\n                }\r\n            );\r\n           //axios does not have response.ok, but throws an error, if the response is not 200\r\n            console.log(\"User posted\", response.data)\r\n        }catch (err){\r\n            if(!err?.response){\r\n                console.log(\"No Server Response\");\r\n            }else if(err.response?.status === 400){ //missing user details\r\n                console.log(\"Error Message:\", err.response.data);\r\n            }else if(err.response?.status === 409){ //user already exists\r\n                console.log(\"Error Message\", err.response.data);\r\n            }else{\r\n                console.log(\"Registration failed\");\r\n            }\r\n           // errRef.current.focus();\r\n        }\r\n    }\r\n\r\n\r\n    const handleLogin = async (event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            //axios makes data as json, no need to stringify it\r\n            const response = await axios.post(API_URL + \"/user/authenticate\", { email, password},\r\n                {\r\n                    headers: {'Content-Type': 'application/json'},\r\n                }\r\n            );\r\n            //axios does not have response.ok, but throws an error, if the response is not 200\r\n            console.log(\"User logged in\", JSON.stringify(response.data));\r\n            const accessToken = response.data?.token;\r\n            setAuth({user, password, accessToken});\r\n            setUser(\"\");\r\n            setPassword(\"\");\r\n            setSuccess(true);\r\n        }catch (err){\r\n            if(!err?.response){\r\n                console.log(\"No Server Response\");\r\n            }else if(err.response?.status === 403){ //missing user details\r\n                console.log(\"User does not exist\");\r\n            } else{\r\n                console.log(\"Login failed\");\r\n            }\r\n            // errRef.current.focus();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <form onSubmit={handleRegister} className=\"login-form\">\r\n                <h1>{func}</h1>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"text\" id=\"email\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\r\n                </div>\r\n                    {!display && (\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"userName\">User name</label>\r\n                            <input type=\"text\" id=\"userName\" name=\"userName\" value={userName} onChange={(e) => setUserName(e.target.value)} required/>\r\n                        </div>\r\n                    )}\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required/>\r\n                    {!display && (\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                            <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" required/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <button type=\"submit\" >{func}</button>\r\n                {display && (\r\n                    <>\r\n                        <p>Don't have an account?</p>\r\n                        <Link to=\"register\">Register Now</Link>\r\n                    </>\r\n                )\r\n            }\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n    //using pure javascript\r\n   /* const handleSubmit = async (event) => {\r\n        //prevents the page loading after the event happened\r\n        event.preventDefault();\r\n        const input = {userName, email, password};\r\n\r\n\r\n        //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\r\n        await fetch('http://localhost:8080/user/register',{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(input)\r\n        }).then(response => {\r\n            //server response\r\n            if (response.ok) {\r\n                console.log(\"User posted\")\r\n                return response.text();\r\n            }\r\n            throw new Error('HTTP error! status: ${response.status}');\r\n        });\r\n\r\n    }*/\r\n\r\n\r\n}"],"mappings":";;AAAA,SAAQA,IAAI,EAAEC,WAAW,QAAO,kBAAkB;AAClD,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC7B,MAAMC,OAAO,GAAG,uBAAuB;AAGvC,eAAe,SAASC,UAAUA,CAAC;EAACC,OAAO;EAAEC;AAAI,CAAC,EAAC;EAAAC,EAAA;EAE/C,MAAMC,MAAM,GAAGV,MAAM,CAAC,CAAC;EACvB,MAAK,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAK,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAK,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAK,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAK,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAG5C,MAAMuB,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAG9B,MAAMyB,cAAc,GAAG,MAAOC,KAAK,IAAI;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAG;MACC;MACD,MAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAACrB,OAAO,GAAG,gBAAgB,EAAE;QAACU,QAAQ;QAAEJ,KAAK;QAAEE;MAAQ,CAAC,EACpF;QACIc,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB;MAChD,CACJ,CAAC;MACF;MACCC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,QAAQ,CAACK,IAAI,CAAC;IAC7C,CAAC,QAAOC,GAAG,EAAC;MAAA,IAAAC,aAAA,EAAAC,cAAA;MACR,IAAG,EAACF,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEN,QAAQ,GAAC;QACdG,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACrC,CAAC,MAAK,IAAG,EAAAG,aAAA,GAAAD,GAAG,CAACN,QAAQ,cAAAO,aAAA,uBAAZA,aAAA,CAAcE,MAAM,MAAK,GAAG,EAAC;QAAE;QACpCN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEE,GAAG,CAACN,QAAQ,CAACK,IAAI,CAAC;MACpD,CAAC,MAAK,IAAG,EAAAG,cAAA,GAAAF,GAAG,CAACN,QAAQ,cAAAQ,cAAA,uBAAZA,cAAA,CAAcC,MAAM,MAAK,GAAG,EAAC;QAAE;QACpCN,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEE,GAAG,CAACN,QAAQ,CAACK,IAAI,CAAC;MACnD,CAAC,MAAI;QACDF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACtC;MACD;IACH;EACJ,CAAC;EAGD,MAAMM,WAAW,GAAG,MAAOZ,KAAK,IAAI;IAChCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAG;MAAA,IAAAY,cAAA;MACC;MACA,MAAMX,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAACrB,OAAO,GAAG,oBAAoB,EAAE;QAAEM,KAAK;QAAEE;MAAQ,CAAC,EAChF;QACIc,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB;MAChD,CACJ,CAAC;MACD;MACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEQ,IAAI,CAACC,SAAS,CAACb,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC5D,MAAMS,WAAW,IAAAH,cAAA,GAAGX,QAAQ,CAACK,IAAI,cAAAM,cAAA,uBAAbA,cAAA,CAAeI,KAAK;MACxCC,OAAO,CAAC;QAACC,IAAI;QAAE7B,QAAQ;QAAE0B;MAAW,CAAC,CAAC;MACtCI,OAAO,CAAC,EAAE,CAAC;MACX7B,WAAW,CAAC,EAAE,CAAC;MACfM,UAAU,CAAC,IAAI,CAAC;IACpB,CAAC,QAAOW,GAAG,EAAC;MAAA,IAAAa,cAAA;MACR,IAAG,EAACb,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEN,QAAQ,GAAC;QACdG,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACrC,CAAC,MAAK,IAAG,EAAAe,cAAA,GAAAb,GAAG,CAACN,QAAQ,cAAAmB,cAAA,uBAAZA,cAAA,CAAcV,MAAM,MAAK,GAAG,EAAC;QAAE;QACpCN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACtC,CAAC,MAAK;QACFD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC/B;MACA;IACJ;EACJ,CAAC;EAID,oBACI3B,OAAA;IAAK2C,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5B5C,OAAA;MAAM6C,QAAQ,EAAEzB,cAAe;MAACuB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAClD5C,OAAA;QAAA4C,QAAA,EAAKtC;MAAI;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACfjD,OAAA;QAAK2C,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxB5C,OAAA;UAAOkD,OAAO,EAAC,OAAO;UAAAN,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpCjD,OAAA;UAAOmD,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,OAAO;UAACC,IAAI,EAAC,OAAO;UAACC,KAAK,EAAE7C,KAAM;UAAC8C,QAAQ,EAAGC,CAAC,IAAK9C,QAAQ,CAAC8C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACI,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7G,CAAC,EACD,CAAC5C,OAAO,iBACLL,OAAA;QAAK2C,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxB5C,OAAA;UAAOkD,OAAO,EAAC,UAAU;UAAAN,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CjD,OAAA;UAAOmD,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,UAAU;UAACC,IAAI,EAAC,UAAU;UAACC,KAAK,EAAEzC,QAAS;UAAC0C,QAAQ,EAAGC,CAAC,IAAK1C,WAAW,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACI,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzH,CACR,eACLjD,OAAA;QAAK2C,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxB5C,OAAA;UAAOkD,OAAO,EAAC,UAAU;UAAAN,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1CjD,OAAA;UAAOmD,IAAI,EAAC,UAAU;UAACC,EAAE,EAAC,UAAU;UAACC,IAAI,EAAC,UAAU;UAACC,KAAK,EAAE3C,QAAS;UAAC4C,QAAQ,EAAGC,CAAC,IAAK5C,WAAW,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACI,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,EAC7H,CAAC5C,OAAO,iBACLL,OAAA;UAAK2C,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxB5C,OAAA;YAAOkD,OAAO,EAAC,iBAAiB;YAAAN,QAAA,EAAC;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzDjD,OAAA;YAAOmD,IAAI,EAAC,UAAU;YAACC,EAAE,EAAC,iBAAiB;YAACC,IAAI,EAAC,iBAAiB;YAACK,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACNjD,OAAA;QAAQmD,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAGtC;MAAI;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,EACrC5C,OAAO,iBACJL,OAAA,CAAAE,SAAA;QAAA0C,QAAA,gBACI5C,OAAA;UAAA4C,QAAA,EAAG;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7BjD,OAAA,CAACN,IAAI;UAACiE,EAAE,EAAC,UAAU;UAAAf,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,eACzC,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;;EAKV;EACD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAC1C,EAAA,CApIuBH,UAAU;EAAA,QAUbT,WAAW;AAAA;AAAAiE,EAAA,GAVRxD,UAAU;AAAA,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}