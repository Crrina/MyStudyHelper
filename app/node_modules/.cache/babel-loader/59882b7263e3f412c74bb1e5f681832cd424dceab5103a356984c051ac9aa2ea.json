{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crina\\\\Documents\\\\projects1\\\\webproject\\\\project\\\\app\\\\src\\\\components\\\\DetailsBox.js\",\n  _s = $RefreshSig$();\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useRef } from \"react\";\nimport AuthContext from \"../utils/AuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080\";\nexport default function DetailsBox({\n  display,\n  func\n}) {\n  _s();\n  var _location$state, _location$state$from;\n  const {\n    setAuth\n  } = useContext(AuthContext);\n  const userRef = useRef();\n  const errRef = useRef();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userName, setUserName] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/\";\n  const handleRegister = async event => {\n    event.preventDefault();\n    try {\n      //axios makes data as json, no need to stringify it\n      const response = await axios.post(API_URL + \"/user/register\", {\n        userName,\n        email,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      //axios does not have response.ok, but throws an error, if the response is not 200\n      console.log(\"User posted\", response.data);\n      navigate(\"/login\");\n    } catch (err) {\n      var _err$response, _err$response2;\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        //missing user details\n        setErrMsg(err.response.data);\n        console.log(\"Error Message:\", err.response.data);\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 409) {\n        //user already exists\n        console.log(\"Error Message\", err.response.data);\n        setErrMsg(err.response.data);\n      } else {\n        setErrMsg(\"Registration failed\");\n        console.log(\"Registration failed\");\n      }\n      // errRef.current.focus();\n    }\n  };\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      var _response$data;\n      //axios makes data as json, no need to stringify it\n      const response = await axios.post(API_URL + \"/user/authenticate\", {\n        email,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      //axios does not have response.ok, but throws an error, if the response is not 200\n      console.log(\"User logged in\", JSON.stringify(response.data));\n      const accessToken = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.token;\n      setAuth({\n        userName,\n        email,\n        password,\n        accessToken\n      });\n      localStorage.setItem(\"accessToken\", accessToken);\n      setPassword(\"\");\n      setUserName(\"\");\n      setEmail(\"\");\n      navigate(from, {\n        replace: true\n      });\n    } catch (err) {\n      var _err$response3;\n      if (!(err !== null && err !== void 0 && err.response)) {\n        console.log(\"No Server Response\");\n      } else if (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 403) {\n        //missing user details\n        setErrMsg(\"User does not exist\");\n        console.log(\"User does not exist\");\n      } else {\n        setErrMsg(\"Login failed\");\n        console.log(\"Login failed\");\n      }\n      errRef.current.focus();\n    }\n  };\n\n  //happens only when the component loads\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setErrMsg('');\n  }, [userName, email, password]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: display ? handleLogin : handleRegister,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: func\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          ref: userRef,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), !display && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userName\",\n          children: \"User name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"userName\",\n          name: \"userName\",\n          value: userName,\n          onChange: e => setUserName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), !display && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: func\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), display && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Don't have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"register\",\n          children: \"Register Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n\n  //using pure javascript\n  /* const handleSubmit = async (event) => {\r\n       //prevents the page loading after the event happened\r\n       event.preventDefault();\r\n       const input = {userName, email, password};\r\n  \n       //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\r\n       await fetch('http://localhost:8080/user/register',{\r\n           method: 'POST',\r\n           headers: {\"Content-Type\": \"application/json\"},\r\n           body: JSON.stringify(input)\r\n       }).then(response => {\r\n           //server response\r\n           if (response.ok) {\r\n               console.log(\"User posted\")\r\n               return response.text();\r\n           }\r\n           throw new Error('HTTP error! status: ${response.status}');\r\n       });\r\n     }*/\n}\n_s(DetailsBox, \"dpI5zkfasNBiAtDioRhy34rK5Fk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = DetailsBox;\nvar _c;\n$RefreshReg$(_c, \"DetailsBox\");","map":{"version":3,"names":["Link","useLocation","useNavigate","useContext","useEffect","useState","axios","useRef","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","DetailsBox","display","func","_s","_location$state","_location$state$from","setAuth","userRef","errRef","email","setEmail","password","setPassword","userName","setUserName","errMsg","setErrMsg","navigate","location","from","state","pathname","handleRegister","event","preventDefault","response","post","headers","console","log","data","err","_err$response","_err$response2","status","handleLogin","_response$data","JSON","stringify","accessToken","token","localStorage","setItem","replace","_err$response3","current","focus","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","ref","htmlFor","type","id","name","value","onChange","e","target","required","to","_c","$RefreshReg$"],"sources":["C:/Users/crina/Documents/projects1/webproject/project/app/src/components/DetailsBox.js"],"sourcesContent":["import {Link, useLocation, useNavigate} from \"react-router-dom\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useRef} from \"react\";\r\nimport AuthContext from \"../utils/AuthProvider\";\r\nconst API_URL = \"http://localhost:8080\"\r\n\r\n\r\nexport default function DetailsBox({display, func}){\r\n\r\n    const{setAuth} = useContext(AuthContext);\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n    const[email, setEmail] = useState('');\r\n    const[password, setPassword] = useState('');\r\n    const[userName, setUserName] = useState('');\r\n    const[errMsg, setErrMsg] = useState('');\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const from = location.state?.from?.pathname || \"/\";\r\n\r\n\r\n    const handleRegister = async (event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            //axios makes data as json, no need to stringify it\r\n           const response = await axios.post(API_URL + \"/user/register\", {userName, email, password},\r\n                {\r\n                    headers: {'Content-Type': 'application/json'},\r\n                }\r\n            );\r\n           //axios does not have response.ok, but throws an error, if the response is not 200\r\n            console.log(\"User posted\", response.data)\r\n            navigate(\"/login\");\r\n        }catch (err){\r\n            if(!err?.response){\r\n                console.log(\"No Server Response\");\r\n            }else if(err.response?.status === 400){ //missing user details\r\n                setErrMsg(err.response.data);\r\n                console.log(\"Error Message:\", err.response.data);\r\n            }else if(err.response?.status === 409){ //user already exists\r\n                console.log(\"Error Message\", err.response.data);\r\n                setErrMsg(err.response.data);\r\n            }else{\r\n                setErrMsg(\"Registration failed\");\r\n                console.log(\"Registration failed\");\r\n            }\r\n           // errRef.current.focus();\r\n        }\r\n    }\r\n\r\n\r\n    const handleLogin = async (event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            //axios makes data as json, no need to stringify it\r\n            const response = await axios.post(API_URL + \"/user/authenticate\", { email, password},\r\n                {\r\n                    headers: {'Content-Type': 'application/json'},\r\n                }\r\n            );\r\n            //axios does not have response.ok, but throws an error, if the response is not 200\r\n            console.log(\"User logged in\", JSON.stringify(response.data));\r\n            const accessToken = response.data?.token;\r\n            setAuth({userName,email, password, accessToken});\r\n            localStorage.setItem(\"accessToken\", accessToken);\r\n            setPassword(\"\");\r\n            setUserName(\"\");\r\n            setEmail(\"\");\r\n            navigate(from, {replace:true});\r\n        }catch (err){\r\n            if(!err?.response){\r\n                console.log(\"No Server Response\");\r\n            }else if(err.response?.status === 403){ //missing user details\r\n                setErrMsg(\"User does not exist\");\r\n                console.log(\"User does not exist\");\r\n            } else{\r\n                setErrMsg(\"Login failed\");\r\n                console.log(\"Login failed\");\r\n            }\r\n             errRef.current.focus();\r\n        }\r\n    }\r\n\r\n    //happens only when the component loads\r\n    useEffect(()=> {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(()=> {\r\n        setErrMsg('');\r\n    },[userName, email, password])\r\n\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <form onSubmit={display? handleLogin:handleRegister} className=\"login-form\">\r\n                <h1>{func}</h1>\r\n                <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"text\" id=\"email\" name=\"email\" value={email} ref={userRef}  onChange={(e) => setEmail(e.target.value)} required/>\r\n                </div>\r\n                    {!display && (\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"userName\">User name</label>\r\n                            <input type=\"text\" id=\"userName\" name=\"userName\" value={userName} onChange={(e) => setUserName(e.target.value)} required/>\r\n                        </div>\r\n                    )}\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required/>\r\n                    {!display && (\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                            <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" required/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <button type=\"submit\" >{func}</button>\r\n                {display && (\r\n                    <>\r\n                        <p>Don't have an account?</p>\r\n                        <Link to=\"register\">Register Now</Link>\r\n                    </>\r\n                )\r\n            }\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n    //using pure javascript\r\n   /* const handleSubmit = async (event) => {\r\n        //prevents the page loading after the event happened\r\n        event.preventDefault();\r\n        const input = {userName, email, password};\r\n\r\n\r\n        //asynchronous, the server 8080 path, i put /register at the end, but if i remove /register from server i can remove it from here as well\r\n        await fetch('http://localhost:8080/user/register',{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(input)\r\n        }).then(response => {\r\n            //server response\r\n            if (response.ok) {\r\n                console.log(\"User posted\")\r\n                return response.text();\r\n            }\r\n            throw new Error('HTTP error! status: ${response.status}');\r\n        });\r\n\r\n    }*/\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}